{"ast":null,"code":"import boxBlur from \"./boxBlur\";\nexport default function adaptiveThreshold(image, threshold, blurSize) {\n  const {\n    width,\n    height,\n    bytes\n  } = image;\n  const blurred = boxBlur(image, blurSize, blurSize);\n  const blurredBytes = blurred.bytes;\n  for (let y = 0; y < height; y++) {\n    const row = y * width;\n    for (let x = 0; x < width; x++) {\n      bytes[row + width + x] = blurredBytes[row + x] - bytes[row + width + x] > threshold ? 255 : 0;\n    }\n  }\n  return image;\n}","map":{"version":3,"names":["boxBlur","adaptiveThreshold","image","threshold","blurSize","width","height","bytes","blurred","blurredBytes","y","row","x"],"sources":["F:/extension/SEM 7/NN/Lab/my lab/Project/temp/app/src/augmentedReality/imageProcessing/adaptiveThreshold.ts"],"sourcesContent":["import Image from \"./Image\";\nimport boxBlur from \"./boxBlur\";\n\nexport default function adaptiveThreshold(\n  image: Image,\n  threshold: number,\n  blurSize: number\n): Image {\n  const { width, height, bytes } = image;\n  const blurred = boxBlur(image, blurSize, blurSize);\n  const blurredBytes = blurred.bytes;\n  for (let y = 0; y < height; y++) {\n    const row = y * width;\n    for (let x = 0; x < width; x++) {\n      bytes[row + width + x] =\n        blurredBytes[row + x] - bytes[row + width + x] > threshold ? 255 : 0;\n    }\n  }\n  return image;\n}\n"],"mappings":"AACA,OAAOA,OAAO,MAAM,WAAW;AAE/B,eAAe,SAASC,iBAAiB,CACvCC,KAAY,EACZC,SAAiB,EACjBC,QAAgB,EACT;EACP,MAAM;IAAEC,KAAK;IAAEC,MAAM;IAAEC;EAAM,CAAC,GAAGL,KAAK;EACtC,MAAMM,OAAO,GAAGR,OAAO,CAACE,KAAK,EAAEE,QAAQ,EAAEA,QAAQ,CAAC;EAClD,MAAMK,YAAY,GAAGD,OAAO,CAACD,KAAK;EAClC,KAAK,IAAIG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,MAAM,EAAEI,CAAC,EAAE,EAAE;IAC/B,MAAMC,GAAG,GAAGD,CAAC,GAAGL,KAAK;IACrB,KAAK,IAAIO,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGP,KAAK,EAAEO,CAAC,EAAE,EAAE;MAC9BL,KAAK,CAACI,GAAG,GAAGN,KAAK,GAAGO,CAAC,CAAC,GACpBH,YAAY,CAACE,GAAG,GAAGC,CAAC,CAAC,GAAGL,KAAK,CAACI,GAAG,GAAGN,KAAK,GAAGO,CAAC,CAAC,GAAGT,SAAS,GAAG,GAAG,GAAG,CAAC;IACxE;EACF;EACA,OAAOD,KAAK;AACd"},"metadata":{},"sourceType":"module"}