{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Pack, util } from '@tensorflow/tfjs-core';\nimport { concat } from './Concat';\nimport { expandDims } from './ExpandDims';\nexport function pack(args) {\n  const {\n    inputs,\n    backend,\n    attrs\n  } = args;\n  const {\n    axis\n  } = attrs;\n  if (inputs.length === 1) {\n    return expandDims({\n      inputs: {\n        input: inputs[0]\n      },\n      backend,\n      attrs: {\n        dim: axis\n      }\n    });\n  }\n  const shape = inputs[0].shape;\n  const dtype = inputs[0].dtype;\n  inputs.forEach(t => {\n    util.assertShapesMatch(shape, t.shape, 'All tensors passed to stack must have matching shapes');\n    util.assert(dtype === t.dtype, () => 'All tensors passed to stack must have matching dtypes');\n  });\n  const intermediateTensorInfos = [];\n  const expandedTensors = inputs.map(t => {\n    const expandedT = expandDims({\n      inputs: {\n        input: t\n      },\n      backend,\n      attrs: {\n        dim: axis\n      }\n    });\n    intermediateTensorInfos.push(expandedT);\n    return expandedT;\n  });\n  const result = concat({\n    inputs: expandedTensors,\n    backend,\n    attrs: {\n      axis\n    }\n  });\n  intermediateTensorInfos.forEach(t => backend.disposeIntermediateTensorInfo(t));\n  return result;\n}\nexport const packConfig = {\n  kernelName: Pack,\n  backendName: 'cpu',\n  kernelFunc: pack\n};","map":{"version":3,"sources":["../../src/kernels/Pack.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;AAeG;AAEH,SAAkC,IAAI,EAAqC,IAAI,QAAO,uBAAuB;AAG7G,SAAQ,MAAM,QAAO,UAAU;AAC/B,SAAQ,UAAU,QAAO,cAAc;AAEvC,OAAM,SAAU,IAAI,CAChB,IAAqE,EAAA;EAEvE,MAAM;IAAC,MAAM;IAAE,OAAO;IAAE;EAAK,CAAC,GAAG,IAAI;EACrC,MAAM;IAAC;EAAI,CAAC,GAAG,KAAK;EAEpB,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;IACvB,OAAO,UAAU,CACb;MAAC,MAAM,EAAE;QAAC,KAAK,EAAE,MAAM,CAAC,CAAC;MAAC,CAAC;MAAE,OAAO;MAAE,KAAK,EAAE;QAAC,GAAG,EAAE;MAAI;IAAC,CAAC,CAAC;EAC/D;EAED,MAAM,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK;EAC7B,MAAM,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK;EAE7B,MAAM,CAAC,OAAO,CAAC,CAAC,IAAG;IACjB,IAAI,CAAC,iBAAiB,CAClB,KAAK,EAAE,CAAC,CAAC,KAAK,EACd,uDAAuD,CAAC;IAC5D,IAAI,CAAC,MAAM,CACP,KAAK,KAAK,CAAC,CAAC,KAAK,EACjB,MAAM,uDAAuD,CAAC;EACpE,CAAC,CAAC;EAEF,MAAM,uBAAuB,GAAiB,EAAE;EAChD,MAAM,eAAe,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,IAAG;IACrC,MAAM,SAAS,GACX,UAAU,CAAC;MAAC,MAAM,EAAE;QAAC,KAAK,EAAE;MAAC,CAAC;MAAE,OAAO;MAAE,KAAK,EAAE;QAAC,GAAG,EAAE;MAAI;IAAC,CAAC,CAAC;IACjE,uBAAuB,CAAC,IAAI,CAAC,SAAS,CAAC;IACvC,OAAO,SAAS;EAClB,CAAC,CAAC;EAEF,MAAM,MAAM,GAAG,MAAM,CAAC;IAAC,MAAM,EAAE,eAAe;IAAE,OAAO;IAAE,KAAK,EAAE;MAAC;IAAI;EAAC,CAAC,CAAC;EAExE,uBAAuB,CAAC,OAAO,CAC3B,CAAC,IAAI,OAAO,CAAC,6BAA6B,CAAC,CAAC,CAAC,CAAC;EAElD,OAAO,MAAM;AACf;AAEA,OAAO,MAAM,UAAU,GAAiB;EACtC,UAAU,EAAE,IAAI;EAChB,WAAW,EAAE,KAAK;EAClB,UAAU,EAAE;CACb","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Pack, util } from '@tensorflow/tfjs-core';\nimport { concat } from './Concat';\nimport { expandDims } from './ExpandDims';\nexport function pack(args) {\n    const { inputs, backend, attrs } = args;\n    const { axis } = attrs;\n    if (inputs.length === 1) {\n        return expandDims({ inputs: { input: inputs[0] }, backend, attrs: { dim: axis } });\n    }\n    const shape = inputs[0].shape;\n    const dtype = inputs[0].dtype;\n    inputs.forEach(t => {\n        util.assertShapesMatch(shape, t.shape, 'All tensors passed to stack must have matching shapes');\n        util.assert(dtype === t.dtype, () => 'All tensors passed to stack must have matching dtypes');\n    });\n    const intermediateTensorInfos = [];\n    const expandedTensors = inputs.map(t => {\n        const expandedT = expandDims({ inputs: { input: t }, backend, attrs: { dim: axis } });\n        intermediateTensorInfos.push(expandedT);\n        return expandedT;\n    });\n    const result = concat({ inputs: expandedTensors, backend, attrs: { axis } });\n    intermediateTensorInfos.forEach(t => backend.disposeIntermediateTensorInfo(t));\n    return result;\n}\nexport const packConfig = {\n    kernelName: Pack,\n    backendName: 'cpu',\n    kernelFunc: pack\n};\n//# sourceMappingURL=Pack.js.map"]},"metadata":{},"sourceType":"module"}