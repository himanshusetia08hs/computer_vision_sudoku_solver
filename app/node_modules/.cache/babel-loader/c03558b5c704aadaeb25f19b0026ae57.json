{"ast":null,"code":"function _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n  return arr2;\n}\nimport { factory } from '../../../utils/factory';\nimport { createSolveValidation } from './utils/solveValidation';\nvar name = 'usolveAll';\nvar dependencies = ['typed', 'matrix', 'divideScalar', 'multiplyScalar', 'subtract', 'equalScalar', 'DenseMatrix'];\nexport var createUsolveAll = /* #__PURE__ */factory(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n    matrix = _ref.matrix,\n    divideScalar = _ref.divideScalar,\n    multiplyScalar = _ref.multiplyScalar,\n    subtract = _ref.subtract,\n    equalScalar = _ref.equalScalar,\n    DenseMatrix = _ref.DenseMatrix;\n  var solveValidation = createSolveValidation({\n    DenseMatrix: DenseMatrix\n  });\n  /**\n   * Finds all solutions of a linear equation system by backward substitution. Matrix must be an upper triangular matrix.\n   *\n   * `U * x = b`\n   *\n   * Syntax:\n   *\n   *    math.usolve(U, b)\n   *\n   * Examples:\n   *\n   *    const a = [[-2, 3], [2, 1]]\n   *    const b = [11, 9]\n   *    const x = usolve(a, b)  // [ [[8], [9]] ]\n   *\n   * See also:\n   *\n   *    usolve, lup, slu, usolve, lusolve\n   *\n   * @param {Matrix, Array} U       A N x N matrix or array (U)\n   * @param {Matrix, Array} b       A column vector with the b values\n   *\n   * @return {DenseMatrix[] | Array[]}  An array of affine-independent column vectors (x) that solve the linear system\n   */\n\n  return typed(name, {\n    'SparseMatrix, Array | Matrix': function SparseMatrixArrayMatrix(m, b) {\n      return _sparseBackwardSubstitution(m, b);\n    },\n    'DenseMatrix, Array | Matrix': function DenseMatrixArrayMatrix(m, b) {\n      return _denseBackwardSubstitution(m, b);\n    },\n    'Array, Array | Matrix': function ArrayArrayMatrix(a, b) {\n      var m = matrix(a);\n      var R = _denseBackwardSubstitution(m, b);\n      return R.map(function (r) {\n        return r.valueOf();\n      });\n    }\n  });\n  function _denseBackwardSubstitution(m, b_) {\n    // the algorithm is derived from\n    // https://www.overleaf.com/project/5e6c87c554a3190001a3fc93\n    // array of right-hand sides\n    var B = [solveValidation(m, b_, true)._data.map(function (e) {\n      return e[0];\n    })];\n    var M = m._data;\n    var rows = m._size[0];\n    var columns = m._size[1]; // loop columns backwards\n\n    for (var i = columns - 1; i >= 0; i--) {\n      var L = B.length; // loop right-hand sides\n\n      for (var k = 0; k < L; k++) {\n        var b = B[k];\n        if (!equalScalar(M[i][i], 0)) {\n          // non-singular row\n          b[i] = divideScalar(b[i], M[i][i]);\n          for (var j = i - 1; j >= 0; j--) {\n            // b[j] -= b[i] * M[j,i]\n            b[j] = subtract(b[j], multiplyScalar(b[i], M[j][i]));\n          }\n        } else if (!equalScalar(b[i], 0)) {\n          // singular row, nonzero RHS\n          if (k === 0) {\n            // There is no valid solution\n            return [];\n          } else {\n            // This RHS is invalid but other solutions may still exist\n            B.splice(k, 1);\n            k -= 1;\n            L -= 1;\n          }\n        } else if (k === 0) {\n          // singular row, RHS is zero\n          var bNew = _toConsumableArray(b);\n          bNew[i] = 1;\n          for (var _j = i - 1; _j >= 0; _j--) {\n            bNew[_j] = subtract(bNew[_j], M[_j][i]);\n          }\n          B.push(bNew);\n        }\n      }\n    }\n    return B.map(function (x) {\n      return new DenseMatrix({\n        data: x.map(function (e) {\n          return [e];\n        }),\n        size: [rows, 1]\n      });\n    });\n  }\n  function _sparseBackwardSubstitution(m, b_) {\n    // array of right-hand sides\n    var B = [solveValidation(m, b_, true)._data.map(function (e) {\n      return e[0];\n    })];\n    var rows = m._size[0];\n    var columns = m._size[1];\n    var values = m._values;\n    var index = m._index;\n    var ptr = m._ptr; // loop columns backwards\n\n    for (var i = columns - 1; i >= 0; i--) {\n      var L = B.length; // loop right-hand sides\n\n      for (var k = 0; k < L; k++) {\n        var b = B[k]; // values & indices (column i)\n\n        var iValues = [];\n        var iIndices = []; // first & last indeces in column\n\n        var firstIndex = ptr[i];\n        var lastIndex = ptr[i + 1]; // find the value at [i, i]\n\n        var Mii = 0;\n        for (var j = lastIndex - 1; j >= firstIndex; j--) {\n          var J = index[j]; // check row\n\n          if (J === i) {\n            Mii = values[j];\n          } else if (J < i) {\n            // store upper triangular\n            iValues.push(values[j]);\n            iIndices.push(J);\n          }\n        }\n        if (!equalScalar(Mii, 0)) {\n          // non-singular row\n          b[i] = divideScalar(b[i], Mii); // loop upper triangular\n\n          for (var _j2 = 0, _lastIndex = iIndices.length; _j2 < _lastIndex; _j2++) {\n            var _J = iIndices[_j2];\n            b[_J] = subtract(b[_J], multiplyScalar(b[i], iValues[_j2]));\n          }\n        } else if (!equalScalar(b[i], 0)) {\n          // singular row, nonzero RHS\n          if (k === 0) {\n            // There is no valid solution\n            return [];\n          } else {\n            // This RHS is invalid but other solutions may still exist\n            B.splice(k, 1);\n            k -= 1;\n            L -= 1;\n          }\n        } else if (k === 0) {\n          // singular row, RHS is zero\n          var bNew = _toConsumableArray(b);\n          bNew[i] = 1; // loop upper triangular\n\n          for (var _j3 = 0, _lastIndex2 = iIndices.length; _j3 < _lastIndex2; _j3++) {\n            var _J2 = iIndices[_j3];\n            bNew[_J2] = subtract(bNew[_J2], iValues[_j3]);\n          }\n          B.push(bNew);\n        }\n      }\n    }\n    return B.map(function (x) {\n      return new DenseMatrix({\n        data: x.map(function (e) {\n          return [e];\n        }),\n        size: [rows, 1]\n      });\n    });\n  }\n});","map":{"version":3,"names":["_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","TypeError","o","minLen","_arrayLikeToArray","n","Object","prototype","toString","call","slice","constructor","name","Array","from","test","iter","Symbol","iterator","isArray","len","length","i","arr2","factory","createSolveValidation","dependencies","createUsolveAll","_ref","typed","matrix","divideScalar","multiplyScalar","subtract","equalScalar","DenseMatrix","solveValidation","SparseMatrixArrayMatrix","m","b","_sparseBackwardSubstitution","DenseMatrixArrayMatrix","_denseBackwardSubstitution","ArrayArrayMatrix","a","R","map","r","valueOf","b_","B","_data","e","M","rows","_size","columns","L","k","j","splice","bNew","_j","push","x","data","size","values","_values","index","_index","ptr","_ptr","iValues","iIndices","firstIndex","lastIndex","Mii","J","_j2","_lastIndex","_J","_j3","_lastIndex2","_J2"],"sources":["F:/extension/SEM 7/NN/Lab/my lab/Project/temp/app/node_modules/mathjs/es/function/algebra/solver/usolveAll.js"],"sourcesContent":["function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport { factory } from '../../../utils/factory';\nimport { createSolveValidation } from './utils/solveValidation';\nvar name = 'usolveAll';\nvar dependencies = ['typed', 'matrix', 'divideScalar', 'multiplyScalar', 'subtract', 'equalScalar', 'DenseMatrix'];\nexport var createUsolveAll = /* #__PURE__ */factory(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      matrix = _ref.matrix,\n      divideScalar = _ref.divideScalar,\n      multiplyScalar = _ref.multiplyScalar,\n      subtract = _ref.subtract,\n      equalScalar = _ref.equalScalar,\n      DenseMatrix = _ref.DenseMatrix;\n  var solveValidation = createSolveValidation({\n    DenseMatrix: DenseMatrix\n  });\n  /**\n   * Finds all solutions of a linear equation system by backward substitution. Matrix must be an upper triangular matrix.\n   *\n   * `U * x = b`\n   *\n   * Syntax:\n   *\n   *    math.usolve(U, b)\n   *\n   * Examples:\n   *\n   *    const a = [[-2, 3], [2, 1]]\n   *    const b = [11, 9]\n   *    const x = usolve(a, b)  // [ [[8], [9]] ]\n   *\n   * See also:\n   *\n   *    usolve, lup, slu, usolve, lusolve\n   *\n   * @param {Matrix, Array} U       A N x N matrix or array (U)\n   * @param {Matrix, Array} b       A column vector with the b values\n   *\n   * @return {DenseMatrix[] | Array[]}  An array of affine-independent column vectors (x) that solve the linear system\n   */\n\n  return typed(name, {\n    'SparseMatrix, Array | Matrix': function SparseMatrixArrayMatrix(m, b) {\n      return _sparseBackwardSubstitution(m, b);\n    },\n    'DenseMatrix, Array | Matrix': function DenseMatrixArrayMatrix(m, b) {\n      return _denseBackwardSubstitution(m, b);\n    },\n    'Array, Array | Matrix': function ArrayArrayMatrix(a, b) {\n      var m = matrix(a);\n\n      var R = _denseBackwardSubstitution(m, b);\n\n      return R.map(function (r) {\n        return r.valueOf();\n      });\n    }\n  });\n\n  function _denseBackwardSubstitution(m, b_) {\n    // the algorithm is derived from\n    // https://www.overleaf.com/project/5e6c87c554a3190001a3fc93\n    // array of right-hand sides\n    var B = [solveValidation(m, b_, true)._data.map(function (e) {\n      return e[0];\n    })];\n    var M = m._data;\n    var rows = m._size[0];\n    var columns = m._size[1]; // loop columns backwards\n\n    for (var i = columns - 1; i >= 0; i--) {\n      var L = B.length; // loop right-hand sides\n\n      for (var k = 0; k < L; k++) {\n        var b = B[k];\n\n        if (!equalScalar(M[i][i], 0)) {\n          // non-singular row\n          b[i] = divideScalar(b[i], M[i][i]);\n\n          for (var j = i - 1; j >= 0; j--) {\n            // b[j] -= b[i] * M[j,i]\n            b[j] = subtract(b[j], multiplyScalar(b[i], M[j][i]));\n          }\n        } else if (!equalScalar(b[i], 0)) {\n          // singular row, nonzero RHS\n          if (k === 0) {\n            // There is no valid solution\n            return [];\n          } else {\n            // This RHS is invalid but other solutions may still exist\n            B.splice(k, 1);\n            k -= 1;\n            L -= 1;\n          }\n        } else if (k === 0) {\n          // singular row, RHS is zero\n          var bNew = _toConsumableArray(b);\n\n          bNew[i] = 1;\n\n          for (var _j = i - 1; _j >= 0; _j--) {\n            bNew[_j] = subtract(bNew[_j], M[_j][i]);\n          }\n\n          B.push(bNew);\n        }\n      }\n    }\n\n    return B.map(function (x) {\n      return new DenseMatrix({\n        data: x.map(function (e) {\n          return [e];\n        }),\n        size: [rows, 1]\n      });\n    });\n  }\n\n  function _sparseBackwardSubstitution(m, b_) {\n    // array of right-hand sides\n    var B = [solveValidation(m, b_, true)._data.map(function (e) {\n      return e[0];\n    })];\n    var rows = m._size[0];\n    var columns = m._size[1];\n    var values = m._values;\n    var index = m._index;\n    var ptr = m._ptr; // loop columns backwards\n\n    for (var i = columns - 1; i >= 0; i--) {\n      var L = B.length; // loop right-hand sides\n\n      for (var k = 0; k < L; k++) {\n        var b = B[k]; // values & indices (column i)\n\n        var iValues = [];\n        var iIndices = []; // first & last indeces in column\n\n        var firstIndex = ptr[i];\n        var lastIndex = ptr[i + 1]; // find the value at [i, i]\n\n        var Mii = 0;\n\n        for (var j = lastIndex - 1; j >= firstIndex; j--) {\n          var J = index[j]; // check row\n\n          if (J === i) {\n            Mii = values[j];\n          } else if (J < i) {\n            // store upper triangular\n            iValues.push(values[j]);\n            iIndices.push(J);\n          }\n        }\n\n        if (!equalScalar(Mii, 0)) {\n          // non-singular row\n          b[i] = divideScalar(b[i], Mii); // loop upper triangular\n\n          for (var _j2 = 0, _lastIndex = iIndices.length; _j2 < _lastIndex; _j2++) {\n            var _J = iIndices[_j2];\n            b[_J] = subtract(b[_J], multiplyScalar(b[i], iValues[_j2]));\n          }\n        } else if (!equalScalar(b[i], 0)) {\n          // singular row, nonzero RHS\n          if (k === 0) {\n            // There is no valid solution\n            return [];\n          } else {\n            // This RHS is invalid but other solutions may still exist\n            B.splice(k, 1);\n            k -= 1;\n            L -= 1;\n          }\n        } else if (k === 0) {\n          // singular row, RHS is zero\n          var bNew = _toConsumableArray(b);\n\n          bNew[i] = 1; // loop upper triangular\n\n          for (var _j3 = 0, _lastIndex2 = iIndices.length; _j3 < _lastIndex2; _j3++) {\n            var _J2 = iIndices[_j3];\n            bNew[_J2] = subtract(bNew[_J2], iValues[_j3]);\n          }\n\n          B.push(bNew);\n        }\n      }\n    }\n\n    return B.map(function (x) {\n      return new DenseMatrix({\n        data: x.map(function (e) {\n          return [e];\n        }),\n        size: [rows, 1]\n      });\n    });\n  }\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}