{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Acos } from '../kernel_names';\nimport { cast } from '../ops/cast';\nimport { div } from '../ops/div';\nimport { neg } from '../ops/neg';\nimport { scalar } from '../ops/scalar';\nimport { sqrt } from '../ops/sqrt';\nimport { square } from '../ops/square';\nimport { sub } from '../ops/sub';\nexport const acosGradConfig = {\n  kernelName: Acos,\n  inputsToSave: ['x'],\n  gradFunc: (dy, saved) => {\n    const [x] = saved;\n    return {\n      x: () => {\n        const a = square(cast(x, 'float32'));\n        const b = sqrt(sub(scalar(1), a));\n        return neg(div(dy, b));\n      }\n    };\n  }\n};","map":{"version":3,"sources":["../../../../../../tfjs-core/src/gradients/Acos_grad.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;AAeG;AAEH,SAAQ,IAAI,QAAO,iBAAiB;AAEpC,SAAQ,IAAI,QAAO,aAAa;AAChC,SAAQ,GAAG,QAAO,YAAY;AAC9B,SAAQ,GAAG,QAAO,YAAY;AAC9B,SAAQ,MAAM,QAAO,eAAe;AACpC,SAAQ,IAAI,QAAO,aAAa;AAChC,SAAQ,MAAM,QAAO,eAAe;AACpC,SAAQ,GAAG,QAAO,YAAY;AAG9B,OAAO,MAAM,cAAc,GAAe;EACxC,UAAU,EAAE,IAAI;EAChB,YAAY,EAAE,CAAC,GAAG,CAAC;EACnB,QAAQ,EAAE,CAAC,EAAU,EAAE,KAAe,KAAI;IACxC,MAAM,CAAC,CAAC,CAAC,GAAG,KAAK;IAEjB,OAAO;MACL,CAAC,EAAE,MAAK;QACN,MAAM,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC;QACpC,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACjC,OAAO,GAAG,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;MACxB;KAED;EACH;CACD","sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Acos} from '../kernel_names';\nimport {GradConfig} from '../kernel_registry';\nimport {cast} from '../ops/cast';\nimport {div} from '../ops/div';\nimport {neg} from '../ops/neg';\nimport {scalar} from '../ops/scalar';\nimport {sqrt} from '../ops/sqrt';\nimport {square} from '../ops/square';\nimport {sub} from '../ops/sub';\nimport {Tensor} from '../tensor';\n\nexport const acosGradConfig: GradConfig = {\n  kernelName: Acos,\n  inputsToSave: ['x'],\n  gradFunc: (dy: Tensor, saved: Tensor[]) => {\n    const [x] = saved;\n\n    return {\n      x: () => {\n        const a = square(cast(x, 'float32'));\n        const b = sqrt(sub(scalar(1), a));\n        return neg(div(dy, b));\n      }\n\n    };\n  }\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}