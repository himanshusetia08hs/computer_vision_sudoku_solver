{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Conv2D } from '../kernel_names';\nimport { conv2DBackpropFilter } from '../ops/conv2d_backprop_filter';\nimport { conv2DBackpropInput } from '../ops/conv2d_backprop_input';\nimport * as conv_util from '../ops/conv_util';\nimport * as util from '../util';\nexport const conv2DGradConfig = {\n  kernelName: Conv2D,\n  inputsToSave: ['x', 'filter'],\n  gradFunc: (dy, saved, attrs) => {\n    const [x4D, $filter] = saved;\n    const {\n      dilations,\n      strides,\n      pad,\n      dataFormat\n    } = attrs;\n    util.assert(conv_util.tupleValuesAreOne(dilations), () => 'Error in gradient of conv2D: dilation rates greater than 1 ' + `are not yet supported in gradients. Got dilations '${dilations}'`);\n    return {\n      x: () => conv2DBackpropInput(x4D.shape, dy, $filter, strides, pad, dataFormat),\n      filter: () => conv2DBackpropFilter(x4D, dy, $filter.shape, strides, pad, dataFormat)\n    };\n  }\n};","map":{"version":3,"sources":["../../src/gradients/Conv2D_grad.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;AAeG;AACH,SAAQ,MAAM,QAAoB,iBAAiB;AAEnD,SAAQ,oBAAoB,QAAO,+BAA+B;AAClE,SAAQ,mBAAmB,QAAO,8BAA8B;AAChE,OAAO,KAAK,SAAS,MAAM,kBAAkB;AAE7C,OAAO,KAAK,IAAI,MAAM,SAAS;AAE/B,OAAO,MAAM,gBAAgB,GAAe;EAC1C,UAAU,EAAE,MAAM;EAClB,YAAY,EAAE,CAAC,GAAG,EAAE,QAAQ,CAAC;EAC7B,QAAQ,EAAE,CAAC,EAAY,EAAE,KAAe,EAAE,KAAmB,KAAI;IAC/D,MAAM,CAAC,GAAG,EAAE,OAAO,CAAC,GAAG,KAA6B;IACpD,MAAM;MAAC,SAAS;MAAE,OAAO;MAAE,GAAG;MAAE;IAAU,CAAC,GAAG,KAA0B;IAExE,IAAI,CAAC,MAAM,CACP,SAAS,CAAC,iBAAiB,CAAC,SAAS,CAAC,EACtC,MAAM,6DAA6D,GAC/D,sDAAsD,SAAS,GAAG,CAAC;IAE3E,OAAO;MACL,CAAC,EAAE,MACC,mBAAmB,CAAC,GAAG,CAAC,KAAK,EAAE,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,GAAG,EAAE,UAAU,CAAC;MACzE,MAAM,EAAE,MACJ,oBAAoB,CAAC,GAAG,EAAE,EAAE,EAAE,OAAO,CAAC,KAAK,EAAE,OAAO,EAAE,GAAG,EAAE,UAAU;KAC1E;EACH;CACD","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Conv2D } from '../kernel_names';\nimport { conv2DBackpropFilter } from '../ops/conv2d_backprop_filter';\nimport { conv2DBackpropInput } from '../ops/conv2d_backprop_input';\nimport * as conv_util from '../ops/conv_util';\nimport * as util from '../util';\nexport const conv2DGradConfig = {\n    kernelName: Conv2D,\n    inputsToSave: ['x', 'filter'],\n    gradFunc: (dy, saved, attrs) => {\n        const [x4D, $filter] = saved;\n        const { dilations, strides, pad, dataFormat } = attrs;\n        util.assert(conv_util.tupleValuesAreOne(dilations), () => 'Error in gradient of conv2D: dilation rates greater than 1 ' +\n            `are not yet supported in gradients. Got dilations '${dilations}'`);\n        return {\n            x: () => conv2DBackpropInput(x4D.shape, dy, $filter, strides, pad, dataFormat),\n            filter: () => conv2DBackpropFilter(x4D, dy, $filter.shape, strides, pad, dataFormat)\n        };\n    }\n};\n//# sourceMappingURL=Conv2D_grad.js.map"]},"metadata":{},"sourceType":"module"}