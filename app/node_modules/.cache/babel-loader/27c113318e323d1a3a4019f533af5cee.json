{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { conv1d } from '../../ops/conv1d';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.conv1d = function (filter, stride, pad, dataFormat, dilation, dimRoundingMode) {\n  this.throwIfDisposed();\n  return conv1d(this, filter, stride, pad, dataFormat, dilation, dimRoundingMode);\n};","map":{"version":3,"sources":["../../../../../../../tfjs-core/src/public/chained_ops/conv1d.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;AAeG;AACH,SAAQ,MAAM,QAAO,kBAAkB;AAEvC,SAAQ,oBAAoB,QAA2B,cAAc;AAYrE,oBAAoB,EAAE,CAAC,SAAS,CAAC,MAAM,GAAG,UACtC,MAA6B,EAAE,MAAc,EAC7C,GAA0C,EAAE,UAAwB,EACpE,QAAiB,EAAE,eAAwC,EAAA;EAC7D,IAAI,CAAC,eAAe,EAAE;EACtB,OAAO,MAAM,CACF,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,GAAG,EAAE,UAAU,EAAE,QAAQ,EAC/C,eAAe,CAAM;AAClC,CAAC","sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {conv1d} from '../../ops/conv1d';\nimport {ExplicitPadding} from '../../ops/conv_util';\nimport {getGlobalTensorClass, Tensor2D, Tensor3D} from '../../tensor';\nimport {Rank, TensorLike3D} from '../../types';\n\ndeclare module '../../tensor' {\n  interface Tensor<R extends Rank = Rank> {\n    conv1d<T extends Tensor2D|Tensor3D>(\n        filter: Tensor3D|TensorLike3D, stride: number,\n        pad: 'valid'|'same'|number|ExplicitPadding, dataFormat?: 'NWC'|'NCW',\n        dilation?: number, dimRoundingMode?: 'floor'|'round'|'ceil'): T;\n  }\n}\n\ngetGlobalTensorClass().prototype.conv1d = function<T extends Tensor2D|Tensor3D>(\n    filter: Tensor3D|TensorLike3D, stride: number,\n    pad: 'valid'|'same'|number|ExplicitPadding, dataFormat?: 'NWC'|'NCW',\n    dilation?: number, dimRoundingMode?: 'floor'|'round'|'ceil'): T {\n  this.throwIfDisposed();\n  return conv1d(\n             this, filter, stride, pad, dataFormat, dilation,\n             dimRoundingMode) as T;\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}