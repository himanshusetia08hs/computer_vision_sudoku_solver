{"ast":null,"code":"/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { StringToHashBucketFast } from '@tensorflow/tfjs-core';\nimport { stringToHashBucketFastImplCPU } from '../kernel_utils/shared';\nfunction stringToHashBucketFast(args) {\n  const {\n    backend,\n    inputs,\n    attrs\n  } = args;\n  const {\n    input\n  } = inputs;\n  const {\n    numBuckets\n  } = attrs;\n  const inputVals = backend.readSync(input.dataId);\n  const values = stringToHashBucketFastImplCPU(inputVals, numBuckets);\n  const out = backend.makeOutput(input.shape, 'int32');\n  const outVals = backend.typedArrayFromHeap(out);\n  outVals.set(values);\n  return out;\n}\nexport const stringToHashBucketFastConfig = {\n  kernelName: StringToHashBucketFast,\n  backendName: 'wasm',\n  kernelFunc: stringToHashBucketFast\n};","map":{"version":3,"sources":["../../../../../../tfjs-backend-wasm/src/kernels/StringToHashBucketFast.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;AAeG;AAEH,SAAkC,sBAAsB,QAA8E,uBAAuB;AAG7J,SAAQ,6BAA6B,QAAO,wBAAwB;AAEpE,SAAS,sBAAsB,CAAC,IAI/B,EAAA;EACC,MAAM;IAAC,OAAO;IAAE,MAAM;IAAE;EAAK,CAAC,GAAG,IAAI;EACrC,MAAM;IAAC;EAAK,CAAC,GAAG,MAAM;EACtB,MAAM;IAAC;EAAU,CAAC,GAAG,KAAK;EAE1B,MAAM,SAAS,GAAG,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAiB;EAEhE,MAAM,MAAM,GAAG,6BAA6B,CAAC,SAAS,EAAE,UAAU,CAAC;EAEnE,MAAM,GAAG,GAAG,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,KAAK,EAAE,OAAO,CAAC;EACpD,MAAM,OAAO,GAAG,OAAO,CAAC,kBAAkB,CAAC,GAAG,CAAC;EAC/C,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC;EACnB,OAAO,GAAG;AACZ;AAEA,OAAO,MAAM,4BAA4B,GAAiB;EACxD,UAAU,EAAE,sBAAsB;EAClC,WAAW,EAAE,MAAM;EACnB,UAAU,EAAE;CACb","sourcesContent":["/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, StringToHashBucketFast, StringToHashBucketFastAttrs, StringToHashBucketFastInputs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\nimport {stringToHashBucketFastImplCPU} from '../kernel_utils/shared';\n\nfunction stringToHashBucketFast(args: {\n  backend: BackendWasm,\n  inputs: StringToHashBucketFastInputs,\n  attrs: StringToHashBucketFastAttrs\n}): TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {input} = inputs;\n  const {numBuckets} = attrs;\n\n  const inputVals = backend.readSync(input.dataId) as Uint8Array[];\n\n  const values = stringToHashBucketFastImplCPU(inputVals, numBuckets);\n\n  const out = backend.makeOutput(input.shape, 'int32');\n  const outVals = backend.typedArrayFromHeap(out);\n  outVals.set(values);\n  return out;\n}\n\nexport const stringToHashBucketFastConfig: KernelConfig = {\n  kernelName: StringToHashBucketFast,\n  backendName: 'wasm',\n  kernelFunc: stringToHashBucketFast as {} as KernelFunc\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}