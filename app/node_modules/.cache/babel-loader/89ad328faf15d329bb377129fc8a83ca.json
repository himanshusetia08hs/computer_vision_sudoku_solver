{"ast":null,"code":"import * as math from \"mathjs\";\nexport default function findHomographicTransform(size, corners) {\n  const A = math.zeros(8, 8);\n  A.set([0, 2], 1);\n  A.set([1, 5], 1);\n  A.set([2, 0], size);\n  A.set([2, 2], 1);\n  A.set([2, 6], -size * corners.topRight.x);\n  A.set([3, 3], size);\n  A.set([3, 5], 1);\n  A.set([3, 6], -size * corners.topRight.y);\n  A.set([4, 1], size);\n  A.set([4, 2], 1);\n  A.set([4, 7], -size * corners.bottomLeft.x);\n  A.set([5, 4], size);\n  A.set([5, 5], 1);\n  A.set([5, 7], -size * corners.bottomLeft.y);\n  A.set([6, 0], size);\n  A.set([6, 1], size);\n  A.set([6, 2], 1);\n  A.set([6, 6], -size * corners.bottomRight.x);\n  A.set([6, 7], -size * corners.bottomRight.x);\n  A.set([7, 3], size);\n  A.set([7, 4], size);\n  A.set([7, 5], 1);\n  A.set([7, 6], -size * corners.bottomRight.y);\n  A.set([7, 7], -size * corners.bottomRight.y);\n  const B = math.matrix([corners.topLeft.x, corners.topLeft.y, corners.topRight.x, corners.topRight.y, corners.bottomLeft.x, corners.bottomLeft.y, corners.bottomRight.x, corners.bottomRight.y]);\n  const A_t = math.transpose(A);\n  const lamda = math.multiply(math.multiply(math.inv(math.multiply(A_t, A)), A_t), B);\n  const a = lamda.get([0]);\n  const b = lamda.get([1]);\n  const c = lamda.get([2]);\n  const d = lamda.get([3]);\n  const e = lamda.get([4]);\n  const f = lamda.get([5]);\n  const g = lamda.get([6]);\n  const h = lamda.get([7]);\n  return {\n    a,\n    b,\n    c,\n    d,\n    e,\n    f,\n    g,\n    h\n  };\n}\nexport function transformPoint(point, tranform) {\n  const {\n    a,\n    b,\n    c,\n    d,\n    e,\n    f,\n    g,\n    h\n  } = tranform;\n  const {\n    x,\n    y\n  } = point;\n  const sxPre1 = b * y + c;\n  const sxPre2 = h * y + 1;\n  const syPre1 = e * y + f;\n  const syPre2 = h * y + 1;\n  const sx = Math.floor((a * x + sxPre1) / (g * x + sxPre2));\n  const sy = Math.floor((d * x + syPre1) / (g * x + syPre2));\n  return {\n    x: sx,\n    y: sy\n  };\n}","map":{"version":3,"names":["math","findHomographicTransform","size","corners","A","zeros","set","topRight","x","y","bottomLeft","bottomRight","B","matrix","topLeft","A_t","transpose","lamda","multiply","inv","a","get","b","c","d","e","f","g","h","transformPoint","point","tranform","sxPre1","sxPre2","syPre1","syPre2","sx","Math","floor","sy"],"sources":["F:/extension/SEM 7/NN/Lab/my lab/P/temp/app/src/augmentedReality/imageProcessing/findHomographicTransform.ts"],"sourcesContent":["import { Point } from \"./getLargestConnectedComponent\";\nimport * as math from \"mathjs\";\n\nexport interface Transform {\n  a: number;\n  b: number;\n  c: number;\n  d: number;\n  e: number;\n  f: number;\n  g: number;\n  h: number;\n}\n\nexport default function findHomographicTransform(\n  size: number,\n  corners: {\n    topLeft: Point;\n    topRight: Point;\n    bottomLeft: Point;\n    bottomRight: Point;\n  }\n): Transform {\n  const A = math.zeros(8, 8) as math.Matrix;\n\n  A.set([0, 2], 1);\n  A.set([1, 5], 1);\n  A.set([2, 0], size);\n  A.set([2, 2], 1);\n  A.set([2, 6], -size * corners.topRight.x);\n  A.set([3, 3], size);\n  A.set([3, 5], 1);\n  A.set([3, 6], -size * corners.topRight.y);\n  A.set([4, 1], size);\n  A.set([4, 2], 1);\n  A.set([4, 7], -size * corners.bottomLeft.x);\n  A.set([5, 4], size);\n  A.set([5, 5], 1);\n  A.set([5, 7], -size * corners.bottomLeft.y);\n  A.set([6, 0], size);\n  A.set([6, 1], size);\n  A.set([6, 2], 1);\n  A.set([6, 6], -size * corners.bottomRight.x);\n  A.set([6, 7], -size * corners.bottomRight.x);\n  A.set([7, 3], size);\n  A.set([7, 4], size);\n  A.set([7, 5], 1);\n  A.set([7, 6], -size * corners.bottomRight.y);\n  A.set([7, 7], -size * corners.bottomRight.y);\n\n  const B = math.matrix([\n    corners.topLeft.x,\n    corners.topLeft.y,\n    corners.topRight.x,\n    corners.topRight.y,\n    corners.bottomLeft.x,\n    corners.bottomLeft.y,\n    corners.bottomRight.x,\n    corners.bottomRight.y,\n  ]);\n\n  const A_t = math.transpose(A);\n  const lamda = math.multiply(\n    math.multiply(math.inv(math.multiply(A_t, A)), A_t),\n    B\n  );\n\n  const a = lamda.get([0]);\n  const b = lamda.get([1]);\n  const c = lamda.get([2]);\n  const d = lamda.get([3]);\n  const e = lamda.get([4]);\n  const f = lamda.get([5]);\n  const g = lamda.get([6]);\n  const h = lamda.get([7]);\n  return { a, b, c, d, e, f, g, h };\n}\n\nexport function transformPoint(point: Point, tranform: Transform) {\n  const { a, b, c, d, e, f, g, h } = tranform;\n  const { x, y } = point;\n\n  const sxPre1 = b * y + c;\n  const sxPre2 = h * y + 1;\n  const syPre1 = e * y + f;\n  const syPre2 = h * y + 1;\n\n  const sx = Math.floor((a * x + sxPre1) / (g * x + sxPre2));\n  const sy = Math.floor((d * x + syPre1) / (g * x + syPre2));\n  return { x: sx, y: sy };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}