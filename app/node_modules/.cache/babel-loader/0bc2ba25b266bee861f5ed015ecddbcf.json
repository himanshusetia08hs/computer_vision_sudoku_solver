{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n  return _typeof(obj);\n}\nimport { hasOwnProperty } from './object';\n/**\n * Get a property of a plain object\n * Throws an error in case the object is not a plain object or the\n * property is not defined on the object itself\n * @param {Object} object\n * @param {string} prop\n * @return {*} Returns the property value when safe\n */\n\nfunction getSafeProperty(object, prop) {\n  // only allow getting safe properties of a plain object\n  if (isPlainObject(object) && isSafeProperty(object, prop)) {\n    return object[prop];\n  }\n  if (typeof object[prop] === 'function' && isSafeMethod(object, prop)) {\n    throw new Error('Cannot access method \"' + prop + '\" as a property');\n  }\n  throw new Error('No access to property \"' + prop + '\"');\n}\n/**\n * Set a property on a plain object.\n * Throws an error in case the object is not a plain object or the\n * property would override an inherited property like .constructor or .toString\n * @param {Object} object\n * @param {string} prop\n * @param {*} value\n * @return {*} Returns the value\n */\n// TODO: merge this function into access.js?\n\nfunction setSafeProperty(object, prop, value) {\n  // only allow setting safe properties of a plain object\n  if (isPlainObject(object) && isSafeProperty(object, prop)) {\n    object[prop] = value;\n    return value;\n  }\n  throw new Error('No access to property \"' + prop + '\"');\n}\n/**\n * Test whether a property is safe to use for an object.\n * For example .toString and .constructor are not safe\n * @param {string} prop\n * @return {boolean} Returns true when safe\n */\n\nfunction isSafeProperty(object, prop) {\n  if (!object || _typeof(object) !== 'object') {\n    return false;\n  } // SAFE: whitelisted\n  // e.g length\n\n  if (hasOwnProperty(safeNativeProperties, prop)) {\n    return true;\n  } // UNSAFE: inherited from Object prototype\n  // e.g constructor\n\n  if (prop in Object.prototype) {\n    // 'in' is used instead of hasOwnProperty for nodejs v0.10\n    // which is inconsistent on root prototypes. It is safe\n    // here because Object.prototype is a root object\n    return false;\n  } // UNSAFE: inherited from Function prototype\n  // e.g call, apply\n\n  if (prop in Function.prototype) {\n    // 'in' is used instead of hasOwnProperty for nodejs v0.10\n    // which is inconsistent on root prototypes. It is safe\n    // here because Function.prototype is a root object\n    return false;\n  }\n  return true;\n}\n/**\n * Validate whether a method is safe.\n * Throws an error when that's not the case.\n * @param {Object} object\n * @param {string} method\n */\n// TODO: merge this function into assign.js?\n\nfunction validateSafeMethod(object, method) {\n  if (!isSafeMethod(object, method)) {\n    throw new Error('No access to method \"' + method + '\"');\n  }\n}\n/**\n * Check whether a method is safe.\n * Throws an error when that's not the case (for example for `constructor`).\n * @param {Object} object\n * @param {string} method\n * @return {boolean} Returns true when safe, false otherwise\n */\n\nfunction isSafeMethod(object, method) {\n  if (object === null || object === undefined || typeof object[method] !== 'function') {\n    return false;\n  } // UNSAFE: ghosted\n  // e.g overridden toString\n  // Note that IE10 doesn't support __proto__ and we can't do this check there.\n\n  if (hasOwnProperty(object, method) && Object.getPrototypeOf && method in Object.getPrototypeOf(object)) {\n    return false;\n  } // SAFE: whitelisted\n  // e.g toString\n\n  if (hasOwnProperty(safeNativeMethods, method)) {\n    return true;\n  } // UNSAFE: inherited from Object prototype\n  // e.g constructor\n\n  if (method in Object.prototype) {\n    // 'in' is used instead of hasOwnProperty for nodejs v0.10\n    // which is inconsistent on root prototypes. It is safe\n    // here because Object.prototype is a root object\n    return false;\n  } // UNSAFE: inherited from Function prototype\n  // e.g call, apply\n\n  if (method in Function.prototype) {\n    // 'in' is used instead of hasOwnProperty for nodejs v0.10\n    // which is inconsistent on root prototypes. It is safe\n    // here because Function.prototype is a root object\n    return false;\n  }\n  return true;\n}\nfunction isPlainObject(object) {\n  return _typeof(object) === 'object' && object && object.constructor === Object;\n}\nvar safeNativeProperties = {\n  length: true,\n  name: true\n};\nvar safeNativeMethods = {\n  toString: true,\n  valueOf: true,\n  toLocaleString: true\n};\nexport { getSafeProperty };\nexport { setSafeProperty };\nexport { isSafeProperty };\nexport { validateSafeMethod };\nexport { isSafeMethod };\nexport { isPlainObject };","map":{"version":3,"names":["_typeof","obj","Symbol","iterator","constructor","prototype","hasOwnProperty","getSafeProperty","object","prop","isPlainObject","isSafeProperty","isSafeMethod","Error","setSafeProperty","value","safeNativeProperties","Object","Function","validateSafeMethod","method","undefined","getPrototypeOf","safeNativeMethods","length","name","toString","valueOf","toLocaleString"],"sources":["F:/extension/SEM 7/NN/Lab/my lab/P/temp/app/node_modules/mathjs/es/utils/customs.js"],"sourcesContent":["function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nimport { hasOwnProperty } from './object';\n/**\n * Get a property of a plain object\n * Throws an error in case the object is not a plain object or the\n * property is not defined on the object itself\n * @param {Object} object\n * @param {string} prop\n * @return {*} Returns the property value when safe\n */\n\nfunction getSafeProperty(object, prop) {\n  // only allow getting safe properties of a plain object\n  if (isPlainObject(object) && isSafeProperty(object, prop)) {\n    return object[prop];\n  }\n\n  if (typeof object[prop] === 'function' && isSafeMethod(object, prop)) {\n    throw new Error('Cannot access method \"' + prop + '\" as a property');\n  }\n\n  throw new Error('No access to property \"' + prop + '\"');\n}\n/**\n * Set a property on a plain object.\n * Throws an error in case the object is not a plain object or the\n * property would override an inherited property like .constructor or .toString\n * @param {Object} object\n * @param {string} prop\n * @param {*} value\n * @return {*} Returns the value\n */\n// TODO: merge this function into access.js?\n\n\nfunction setSafeProperty(object, prop, value) {\n  // only allow setting safe properties of a plain object\n  if (isPlainObject(object) && isSafeProperty(object, prop)) {\n    object[prop] = value;\n    return value;\n  }\n\n  throw new Error('No access to property \"' + prop + '\"');\n}\n/**\n * Test whether a property is safe to use for an object.\n * For example .toString and .constructor are not safe\n * @param {string} prop\n * @return {boolean} Returns true when safe\n */\n\n\nfunction isSafeProperty(object, prop) {\n  if (!object || _typeof(object) !== 'object') {\n    return false;\n  } // SAFE: whitelisted\n  // e.g length\n\n\n  if (hasOwnProperty(safeNativeProperties, prop)) {\n    return true;\n  } // UNSAFE: inherited from Object prototype\n  // e.g constructor\n\n\n  if (prop in Object.prototype) {\n    // 'in' is used instead of hasOwnProperty for nodejs v0.10\n    // which is inconsistent on root prototypes. It is safe\n    // here because Object.prototype is a root object\n    return false;\n  } // UNSAFE: inherited from Function prototype\n  // e.g call, apply\n\n\n  if (prop in Function.prototype) {\n    // 'in' is used instead of hasOwnProperty for nodejs v0.10\n    // which is inconsistent on root prototypes. It is safe\n    // here because Function.prototype is a root object\n    return false;\n  }\n\n  return true;\n}\n/**\n * Validate whether a method is safe.\n * Throws an error when that's not the case.\n * @param {Object} object\n * @param {string} method\n */\n// TODO: merge this function into assign.js?\n\n\nfunction validateSafeMethod(object, method) {\n  if (!isSafeMethod(object, method)) {\n    throw new Error('No access to method \"' + method + '\"');\n  }\n}\n/**\n * Check whether a method is safe.\n * Throws an error when that's not the case (for example for `constructor`).\n * @param {Object} object\n * @param {string} method\n * @return {boolean} Returns true when safe, false otherwise\n */\n\n\nfunction isSafeMethod(object, method) {\n  if (object === null || object === undefined || typeof object[method] !== 'function') {\n    return false;\n  } // UNSAFE: ghosted\n  // e.g overridden toString\n  // Note that IE10 doesn't support __proto__ and we can't do this check there.\n\n\n  if (hasOwnProperty(object, method) && Object.getPrototypeOf && method in Object.getPrototypeOf(object)) {\n    return false;\n  } // SAFE: whitelisted\n  // e.g toString\n\n\n  if (hasOwnProperty(safeNativeMethods, method)) {\n    return true;\n  } // UNSAFE: inherited from Object prototype\n  // e.g constructor\n\n\n  if (method in Object.prototype) {\n    // 'in' is used instead of hasOwnProperty for nodejs v0.10\n    // which is inconsistent on root prototypes. It is safe\n    // here because Object.prototype is a root object\n    return false;\n  } // UNSAFE: inherited from Function prototype\n  // e.g call, apply\n\n\n  if (method in Function.prototype) {\n    // 'in' is used instead of hasOwnProperty for nodejs v0.10\n    // which is inconsistent on root prototypes. It is safe\n    // here because Function.prototype is a root object\n    return false;\n  }\n\n  return true;\n}\n\nfunction isPlainObject(object) {\n  return _typeof(object) === 'object' && object && object.constructor === Object;\n}\n\nvar safeNativeProperties = {\n  length: true,\n  name: true\n};\nvar safeNativeMethods = {\n  toString: true,\n  valueOf: true,\n  toLocaleString: true\n};\nexport { getSafeProperty };\nexport { setSafeProperty };\nexport { isSafeProperty };\nexport { validateSafeMethod };\nexport { isSafeMethod };\nexport { isPlainObject };"],"mappings":"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"},"metadata":{},"sourceType":"module"}