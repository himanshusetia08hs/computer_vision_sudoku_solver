{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// TODO update import path once op is modularized.\nimport { step } from '../../ops/ops';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.step = function (alpha) {\n  this.throwIfDisposed();\n  return step(this, alpha);\n};","map":{"version":3,"sources":["../../../../../../../tfjs-core/src/public/chained_ops/step.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;AAeG;AAEH;AACA,SAAQ,IAAI,QAAO,eAAe;AAClC,SAAQ,oBAAoB,QAAe,cAAc;AASzD,oBAAoB,EAAE,CAAC,SAAS,CAAC,IAAI,GAAG,UAC3B,KAAc,EAAA;EACzB,IAAI,CAAC,eAAe,EAAE;EACtB,OAAO,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC;AAC1B,CAAC","sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n// TODO update import path once op is modularized.\nimport {step} from '../../ops/ops';\nimport {getGlobalTensorClass, Tensor} from '../../tensor';\nimport {Rank} from '../../types';\n\ndeclare module '../../tensor' {\n  interface Tensor<R extends Rank = Rank> {\n    step<T extends Tensor>(this: T, alpha?: number): T;\n  }\n}\n\ngetGlobalTensorClass().prototype.step = function<T extends Tensor>(\n    this: T, alpha?: number) {\n  this.throwIfDisposed();\n  return step(this, alpha);\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}