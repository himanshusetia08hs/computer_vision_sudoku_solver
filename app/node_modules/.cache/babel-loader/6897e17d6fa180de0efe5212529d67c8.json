{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n  return _typeof(obj);\n}\nimport { errorTransform } from '../../transform/utils/errorTransform';\nimport { setSafeProperty } from '../../../utils/customs';\nexport function assignFactory(_ref) {\n  var subset = _ref.subset,\n    matrix = _ref.matrix;\n\n  /**\n   * Replace part of an object:\n   *\n   * - Assign a property to an object\n   * - Replace a part of a string\n   * - Replace a matrix subset\n   *\n   * @param {Object | Array | Matrix | string} object\n   * @param {Index} index\n   * @param {*} value\n   * @return {Object | Array | Matrix | string} Returns the original object\n   *                                            except in case of a string\n   */\n  // TODO: change assign to return the value instead of the object\n  return function assign(object, index, value) {\n    try {\n      if (Array.isArray(object)) {\n        // we use matrix.subset here instead of the function subset because we must not clone the contents\n        return matrix(object).subset(index, value).valueOf();\n      } else if (object && typeof object.subset === 'function') {\n        // Matrix\n        return object.subset(index, value);\n      } else if (typeof object === 'string') {\n        // TODO: move setStringSubset into a separate util file, use that\n        return subset(object, index, value);\n      } else if (_typeof(object) === 'object') {\n        if (!index.isObjectProperty()) {\n          throw TypeError('Cannot apply a numeric index as object property');\n        }\n        setSafeProperty(object, index.getObjectProperty(), value);\n        return object;\n      } else {\n        throw new TypeError('Cannot apply index: unsupported type of object');\n      }\n    } catch (err) {\n      throw errorTransform(err);\n    }\n  };\n}","map":{"version":3,"names":["_typeof","obj","Symbol","iterator","constructor","prototype","errorTransform","setSafeProperty","assignFactory","_ref","subset","matrix","assign","object","index","value","Array","isArray","valueOf","isObjectProperty","TypeError","getObjectProperty","err"],"sources":["F:/extension/SEM 7/NN/Lab/my lab/P/temp/app/node_modules/mathjs/es/expression/node/utils/assign.js"],"sourcesContent":["function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nimport { errorTransform } from '../../transform/utils/errorTransform';\nimport { setSafeProperty } from '../../../utils/customs';\nexport function assignFactory(_ref) {\n  var subset = _ref.subset,\n      matrix = _ref.matrix;\n\n  /**\n   * Replace part of an object:\n   *\n   * - Assign a property to an object\n   * - Replace a part of a string\n   * - Replace a matrix subset\n   *\n   * @param {Object | Array | Matrix | string} object\n   * @param {Index} index\n   * @param {*} value\n   * @return {Object | Array | Matrix | string} Returns the original object\n   *                                            except in case of a string\n   */\n  // TODO: change assign to return the value instead of the object\n  return function assign(object, index, value) {\n    try {\n      if (Array.isArray(object)) {\n        // we use matrix.subset here instead of the function subset because we must not clone the contents\n        return matrix(object).subset(index, value).valueOf();\n      } else if (object && typeof object.subset === 'function') {\n        // Matrix\n        return object.subset(index, value);\n      } else if (typeof object === 'string') {\n        // TODO: move setStringSubset into a separate util file, use that\n        return subset(object, index, value);\n      } else if (_typeof(object) === 'object') {\n        if (!index.isObjectProperty()) {\n          throw TypeError('Cannot apply a numeric index as object property');\n        }\n\n        setSafeProperty(object, index.getObjectProperty(), value);\n        return object;\n      } else {\n        throw new TypeError('Cannot apply index: unsupported type of object');\n      }\n    } catch (err) {\n      throw errorTransform(err);\n    }\n  };\n}"],"mappings":"AAAA,SAASA,OAAO,CAACC,GAAG,EAAE;EAAE,yBAAyB;;EAAE,IAAI,OAAOC,MAAM,KAAK,UAAU,IAAI,OAAOA,MAAM,CAACC,QAAQ,KAAK,QAAQ,EAAE;IAAEH,OAAO,GAAG,SAASA,OAAO,CAACC,GAAG,EAAE;MAAE,OAAO,OAAOA,GAAG;IAAE,CAAC;EAAE,CAAC,MAAM;IAAED,OAAO,GAAG,SAASA,OAAO,CAACC,GAAG,EAAE;MAAE,OAAOA,GAAG,IAAI,OAAOC,MAAM,KAAK,UAAU,IAAID,GAAG,CAACG,WAAW,KAAKF,MAAM,IAAID,GAAG,KAAKC,MAAM,CAACG,SAAS,GAAG,QAAQ,GAAG,OAAOJ,GAAG;IAAE,CAAC;EAAE;EAAE,OAAOD,OAAO,CAACC,GAAG,CAAC;AAAE;AAEzX,SAASK,cAAc,QAAQ,sCAAsC;AACrE,SAASC,eAAe,QAAQ,wBAAwB;AACxD,OAAO,SAASC,aAAa,CAACC,IAAI,EAAE;EAClC,IAAIC,MAAM,GAAGD,IAAI,CAACC,MAAM;IACpBC,MAAM,GAAGF,IAAI,CAACE,MAAM;;EAExB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE;EACA,OAAO,SAASC,MAAM,CAACC,MAAM,EAAEC,KAAK,EAAEC,KAAK,EAAE;IAC3C,IAAI;MACF,IAAIC,KAAK,CAACC,OAAO,CAACJ,MAAM,CAAC,EAAE;QACzB;QACA,OAAOF,MAAM,CAACE,MAAM,CAAC,CAACH,MAAM,CAACI,KAAK,EAAEC,KAAK,CAAC,CAACG,OAAO,EAAE;MACtD,CAAC,MAAM,IAAIL,MAAM,IAAI,OAAOA,MAAM,CAACH,MAAM,KAAK,UAAU,EAAE;QACxD;QACA,OAAOG,MAAM,CAACH,MAAM,CAACI,KAAK,EAAEC,KAAK,CAAC;MACpC,CAAC,MAAM,IAAI,OAAOF,MAAM,KAAK,QAAQ,EAAE;QACrC;QACA,OAAOH,MAAM,CAACG,MAAM,EAAEC,KAAK,EAAEC,KAAK,CAAC;MACrC,CAAC,MAAM,IAAIf,OAAO,CAACa,MAAM,CAAC,KAAK,QAAQ,EAAE;QACvC,IAAI,CAACC,KAAK,CAACK,gBAAgB,EAAE,EAAE;UAC7B,MAAMC,SAAS,CAAC,iDAAiD,CAAC;QACpE;QAEAb,eAAe,CAACM,MAAM,EAAEC,KAAK,CAACO,iBAAiB,EAAE,EAAEN,KAAK,CAAC;QACzD,OAAOF,MAAM;MACf,CAAC,MAAM;QACL,MAAM,IAAIO,SAAS,CAAC,gDAAgD,CAAC;MACvE;IACF,CAAC,CAAC,OAAOE,GAAG,EAAE;MACZ,MAAMhB,cAAc,CAACgB,GAAG,CAAC;IAC3B;EACF,CAAC;AACH"},"metadata":{},"sourceType":"module"}