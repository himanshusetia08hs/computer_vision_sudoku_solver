{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport * as axis_util from '../ops/axis_util';\nimport { cast } from '../ops/cast';\nimport { equal } from '../ops/equal';\nimport { mul } from '../ops/mul';\nimport { reshape } from '../ops/reshape';\n/**\n * Gradient helper function for the min and max operations.\n */\nexport function gradForMinAndMax(dy, y, xOrig, origAxes) {\n  if (y.rank < xOrig.rank) {\n    y = reshape(y, axis_util.expandShapeToKeepDim(y.shape, origAxes));\n  }\n  if (dy.rank < xOrig.rank) {\n    dy = reshape(dy, axis_util.expandShapeToKeepDim(dy.shape, origAxes));\n  }\n  return {\n    x: () => {\n      const dx = mul(dy, cast(equal(xOrig, y), dy.dtype));\n      return dx;\n    }\n  };\n}","map":{"version":3,"sources":["../../../../../../tfjs-core/src/gradients/min_max_grad_util.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;AAeG;AAEH,OAAO,KAAK,SAAS,MAAM,kBAAkB;AAC7C,SAAQ,IAAI,QAAO,aAAa;AAChC,SAAQ,KAAK,QAAO,cAAc;AAClC,SAAQ,GAAG,QAAO,YAAY;AAC9B,SAAQ,OAAO,QAAO,gBAAgB;AAGtC;;AAEG;AACH,OAAM,SAAU,gBAAgB,CAC5B,EAAK,EAAE,CAAI,EAAE,KAAa,EAAE,QAAkB,EAAA;EAChD,IAAI,CAAC,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,EAAE;IACvB,CAAC,GAAG,OAAO,CAAC,CAAC,EAAE,SAAS,CAAC,oBAAoB,CAAC,CAAC,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAM;EACvE;EACD,IAAI,EAAE,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,EAAE;IACxB,EAAE,GAAG,OAAO,CAAC,EAAE,EAAE,SAAS,CAAC,oBAAoB,CAAC,EAAE,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAM;EAC1E;EACD,OAAO;IACL,CAAC,EAAE,MAAK;MACN,MAAM,EAAE,GAAG,GAAG,CAAC,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,KAAK,CAAC,CAAC;MACnD,OAAO,EAAE;IACX;GACD;AACH","sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as axis_util from '../ops/axis_util';\nimport {cast} from '../ops/cast';\nimport {equal} from '../ops/equal';\nimport {mul} from '../ops/mul';\nimport {reshape} from '../ops/reshape';\nimport {Tensor} from '../tensor';\n\n/**\n * Gradient helper function for the min and max operations.\n */\nexport function gradForMinAndMax<T extends Tensor>(\n    dy: T, y: T, xOrig: Tensor, origAxes: number[]) {\n  if (y.rank < xOrig.rank) {\n    y = reshape(y, axis_util.expandShapeToKeepDim(y.shape, origAxes)) as T;\n  }\n  if (dy.rank < xOrig.rank) {\n    dy = reshape(dy, axis_util.expandShapeToKeepDim(dy.shape, origAxes)) as T;\n  }\n  return {\n    x: () => {\n      const dx = mul(dy, cast(equal(xOrig, y), dy.dtype));\n      return dx;\n    }\n  };\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}