{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Sum } from '../kernel_names';\nimport { mul } from '../ops/mul';\nimport { ones } from '../ops/ones';\nimport { reshape } from '../ops/reshape';\nimport { parseAxisParam } from '../util';\nexport const sumGradConfig = {\n  kernelName: Sum,\n  inputsToSave: ['x'],\n  gradFunc: (dy, saved, attrs) => {\n    const [x] = saved;\n    const expandedDyShape = x.shape.slice();\n    const {\n      axis\n    } = attrs;\n    const axes = parseAxisParam(axis, x.shape);\n    axes.forEach(axis => {\n      expandedDyShape[axis] = 1;\n    });\n    const expandedDy = reshape(dy, expandedDyShape);\n    const derX = mul(expandedDy, ones(x.shape, 'float32'));\n    return {\n      x: () => derX\n    };\n  }\n};","map":{"version":3,"sources":["../../src/gradients/Sum_grad.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;AAeG;AAEH,SAAQ,GAAG,QAAiB,iBAAiB;AAE7C,SAAQ,GAAG,QAAO,YAAY;AAC9B,SAAQ,IAAI,QAAO,aAAa;AAChC,SAAQ,OAAO,QAAO,gBAAgB;AAEtC,SAAQ,cAAc,QAAO,SAAS;AAEtC,OAAO,MAAM,aAAa,GAAe;EACvC,UAAU,EAAE,GAAG;EACf,YAAY,EAAE,CAAC,GAAG,CAAC;EACnB,QAAQ,EAAE,CAAC,EAAU,EAAE,KAAe,EAAE,KAAmB,KAAI;IAC7D,MAAM,CAAC,CAAC,CAAC,GAAG,KAAK;IACjB,MAAM,eAAe,GAAG,CAAC,CAAC,KAAK,CAAC,KAAK,EAAE;IACvC,MAAM;MAAC;IAAI,CAAC,GAAG,KAAuB;IAEtC,MAAM,IAAI,GAAG,cAAc,CAAC,IAAI,EAAE,CAAC,CAAC,KAAK,CAAC;IAC1C,IAAI,CAAC,OAAO,CAAC,IAAI,IAAG;MAClB,eAAe,CAAC,IAAI,CAAC,GAAG,CAAC;IAC3B,CAAC,CAAC;IACF,MAAM,UAAU,GAAG,OAAO,CAAC,EAAE,EAAE,eAAe,CAAC;IAC/C,MAAM,IAAI,GAAG,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;IAEtD,OAAO;MAAC,CAAC,EAAE,MAAM;IAAI,CAAC;EACxB;CACD","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2020 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Sum } from '../kernel_names';\nimport { mul } from '../ops/mul';\nimport { ones } from '../ops/ones';\nimport { reshape } from '../ops/reshape';\nimport { parseAxisParam } from '../util';\nexport const sumGradConfig = {\n    kernelName: Sum,\n    inputsToSave: ['x'],\n    gradFunc: (dy, saved, attrs) => {\n        const [x] = saved;\n        const expandedDyShape = x.shape.slice();\n        const { axis } = attrs;\n        const axes = parseAxisParam(axis, x.shape);\n        axes.forEach(axis => {\n            expandedDyShape[axis] = 1;\n        });\n        const expandedDy = reshape(dy, expandedDyShape);\n        const derX = mul(expandedDy, ones(x.shape, 'float32'));\n        return { x: () => derX };\n    }\n};\n//# sourceMappingURL=Sum_grad.js.map"]},"metadata":{},"sourceType":"module"}