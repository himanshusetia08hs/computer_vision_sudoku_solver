{"ast":null,"code":"import { bignumberDocs } from './construction/bignumber';\nimport { typeOfDocs } from './function/utils/typeOf';\nimport { isZeroDocs } from './function/utils/isZero';\nimport { isPrimeDocs } from './function/utils/isPrime';\nimport { isPositiveDocs } from './function/utils/isPositive';\nimport { isNumericDocs } from './function/utils/isNumeric';\nimport { hasNumericValueDocs } from './function/utils/hasNumericValue';\nimport { isNegativeDocs } from './function/utils/isNegative';\nimport { isIntegerDocs } from './function/utils/isInteger';\nimport { isNaNDocs } from './function/utils/isNaN';\nimport { formatDocs } from './function/utils/format';\nimport { binDocs } from './function/utils/bin';\nimport { octDocs } from './function/utils/oct';\nimport { hexDocs } from './function/utils/hex';\nimport { cloneDocs } from './function/utils/clone';\nimport { toDocs } from './function/units/to';\nimport { tanhDocs } from './function/trigonometry/tanh';\nimport { tanDocs } from './function/trigonometry/tan';\nimport { sinhDocs } from './function/trigonometry/sinh';\nimport { sechDocs } from './function/trigonometry/sech';\nimport { secDocs } from './function/trigonometry/sec';\nimport { cschDocs } from './function/trigonometry/csch';\nimport { cscDocs } from './function/trigonometry/csc';\nimport { cothDocs } from './function/trigonometry/coth';\nimport { cotDocs } from './function/trigonometry/cot';\nimport { coshDocs } from './function/trigonometry/cosh';\nimport { cosDocs } from './function/trigonometry/cos';\nimport { atan2Docs } from './function/trigonometry/atan2';\nimport { atanhDocs } from './function/trigonometry/atanh';\nimport { atanDocs } from './function/trigonometry/atan';\nimport { asinhDocs } from './function/trigonometry/asinh';\nimport { asinDocs } from './function/trigonometry/asin';\nimport { asechDocs } from './function/trigonometry/asech';\nimport { asecDocs } from './function/trigonometry/asec';\nimport { acschDocs } from './function/trigonometry/acsch';\nimport { acscDocs } from './function/trigonometry/acsc';\nimport { acothDocs } from './function/trigonometry/acoth';\nimport { acotDocs } from './function/trigonometry/acot';\nimport { acoshDocs } from './function/trigonometry/acosh';\nimport { acosDocs } from './function/trigonometry/acos';\nimport { sumDocs } from './function/statistics/sum';\nimport { stdDocs } from './function/statistics/std';\nimport { quantileSeqDocs } from './function/statistics/quantileSeq';\nimport { prodDocs } from './function/statistics/prod';\nimport { modeDocs } from './function/statistics/mode';\nimport { minDocs } from './function/statistics/min';\nimport { medianDocs } from './function/statistics/median';\nimport { meanDocs } from './function/statistics/mean';\nimport { maxDocs } from './function/statistics/max';\nimport { madDocs } from './function/statistics/mad';\nimport { erfDocs } from './function/special/erf';\nimport { setUnionDocs } from './function/set/setUnion';\nimport { setSymDifferenceDocs } from './function/set/setSymDifference';\nimport { setSizeDocs } from './function/set/setSize';\nimport { setPowersetDocs } from './function/set/setPowerset';\nimport { setMultiplicityDocs } from './function/set/setMultiplicity';\nimport { setIsSubsetDocs } from './function/set/setIsSubset';\nimport { setIntersectDocs } from './function/set/setIntersect';\nimport { setDistinctDocs } from './function/set/setDistinct';\nimport { setDifferenceDocs } from './function/set/setDifference';\nimport { setCartesianDocs } from './function/set/setCartesian';\nimport { unequalDocs } from './function/relational/unequal';\nimport { smallerEqDocs } from './function/relational/smallerEq';\nimport { smallerDocs } from './function/relational/smaller';\nimport { largerEqDocs } from './function/relational/largerEq';\nimport { largerDocs } from './function/relational/larger';\nimport { equalTextDocs } from './function/relational/equalText';\nimport { equalDocs } from './function/relational/equal';\nimport { deepEqualDocs } from './function/relational/deepEqual';\nimport { compareTextDocs } from './function/relational/compareText';\nimport { compareNaturalDocs } from './function/relational/compareNatural';\nimport { compareDocs } from './function/relational/compare';\nimport { randomIntDocs } from './function/probability/randomInt';\nimport { randomDocs } from './function/probability/random';\nimport { pickRandomDocs } from './function/probability/pickRandom';\nimport { permutationsDocs } from './function/probability/permutations';\nimport { multinomialDocs } from './function/probability/multinomial';\nimport { kldivergenceDocs } from './function/probability/kldivergence';\nimport { gammaDocs } from './function/probability/gamma';\nimport { factorialDocs } from './function/probability/factorial';\nimport { combinationsDocs } from './function/probability/combinations';\nimport { combinationsWithRepDocs } from './function/probability/combinationsWithRep';\nimport { zerosDocs } from './function/matrix/zeros';\nimport { transposeDocs } from './function/matrix/transpose';\nimport { traceDocs } from './function/matrix/trace';\nimport { subsetDocs } from './function/matrix/subset';\nimport { squeezeDocs } from './function/matrix/squeeze';\nimport { sortDocs } from './function/matrix/sort';\nimport { sizeDocs } from './function/matrix/size';\nimport { diffDocs } from './function/matrix/diff';\nimport { reshapeDocs } from './function/matrix/reshape';\nimport { resizeDocs } from './function/matrix/resize';\nimport { rangeDocs } from './function/matrix/range';\nimport { partitionSelectDocs } from './function/matrix/partitionSelect';\nimport { onesDocs } from './function/matrix/ones';\nimport { mapDocs } from './function/matrix/map';\nimport { kronDocs } from './function/matrix/kron';\nimport { invDocs } from './function/matrix/inv';\nimport { forEachDocs } from './function/matrix/forEach';\nimport { flattenDocs } from './function/matrix/flatten';\nimport { filterDocs } from './function/matrix/filter';\nimport { identityDocs } from './function/matrix/identity';\nimport { getMatrixDataTypeDocs } from './function/matrix/getMatrixDataType';\nimport { dotDocs } from './function/matrix/dot';\nimport { diagDocs } from './function/matrix/diag';\nimport { detDocs } from './function/matrix/det';\nimport { ctransposeDocs } from './function/matrix/ctranspose';\nimport { crossDocs } from './function/matrix/cross';\nimport { concatDocs } from './function/matrix/concat';\nimport { xorDocs } from './function/logical/xor';\nimport { orDocs } from './function/logical/or';\nimport { notDocs } from './function/logical/not';\nimport { andDocs } from './function/logical/and';\nimport { intersectDocs } from './function/geometry/intersect';\nimport { distanceDocs } from './function/geometry/distance';\nimport { helpDocs } from './function/expression/help';\nimport { evaluateDocs } from './function/expression/evaluate';\nimport { imDocs } from './function/complex/im';\nimport { reDocs } from './function/complex/re';\nimport { conjDocs } from './function/complex/conj';\nimport { argDocs } from './function/complex/arg';\nimport { typedDocs } from './core/typed';\nimport { importDocs } from './core/import';\nimport { configDocs } from './core/config';\nimport { stirlingS2Docs } from './function/combinatorics/stirlingS2';\nimport { compositionDocs } from './function/combinatorics/composition';\nimport { catalanDocs } from './function/combinatorics/catalan';\nimport { bellNumbersDocs } from './function/combinatorics/bellNumbers';\nimport { rightLogShiftDocs } from './function/bitwise/rightLogShift';\nimport { rightArithShiftDocs } from './function/bitwise/rightArithShift';\nimport { leftShiftDocs } from './function/bitwise/leftShift';\nimport { bitXorDocs } from './function/bitwise/bitXor';\nimport { bitOrDocs } from './function/bitwise/bitOr';\nimport { bitNotDocs } from './function/bitwise/bitNot';\nimport { bitAndDocs } from './function/bitwise/bitAnd';\nimport { xgcdDocs } from './function/arithmetic/xgcd';\nimport { unaryPlusDocs } from './function/arithmetic/unaryPlus';\nimport { unaryMinusDocs } from './function/arithmetic/unaryMinus';\nimport { squareDocs } from './function/arithmetic/square';\nimport { sqrtmDocs } from './function/arithmetic/sqrtm';\nimport { sqrtDocs } from './function/arithmetic/sqrt';\nimport { signDocs } from './function/arithmetic/sign';\nimport { roundDocs } from './function/arithmetic/round';\nimport { powDocs } from './function/arithmetic/pow';\nimport { nthRootsDocs } from './function/arithmetic/nthRoots';\nimport { nthRootDocs } from './function/arithmetic/nthRoot';\nimport { normDocs } from './function/arithmetic/norm';\nimport { multiplyDocs } from './function/arithmetic/multiply';\nimport { modDocs } from './function/arithmetic/mod';\nimport { log10Docs } from './function/arithmetic/log10';\nimport { log1pDocs } from './function/arithmetic/log1p';\nimport { log2Docs } from './function/arithmetic/log2';\nimport { logDocs } from './function/arithmetic/log';\nimport { lcmDocs } from './function/arithmetic/lcm';\nimport { hypotDocs } from './function/arithmetic/hypot';\nimport { gcdDocs } from './function/arithmetic/gcd';\nimport { floorDocs } from './function/arithmetic/floor';\nimport { fixDocs } from './function/arithmetic/fix';\nimport { expm1Docs } from './function/arithmetic/expm1';\nimport { expmDocs } from './function/arithmetic/expm';\nimport { eigsDocs } from './function/matrix/eigs';\nimport { expDocs } from './function/arithmetic/exp';\nimport { dotMultiplyDocs } from './function/arithmetic/dotMultiply';\nimport { dotDivideDocs } from './function/arithmetic/dotDivide';\nimport { divideDocs } from './function/arithmetic/divide';\nimport { cubeDocs } from './function/arithmetic/cube';\nimport { ceilDocs } from './function/arithmetic/ceil';\nimport { cbrtDocs } from './function/arithmetic/cbrt';\nimport { addDocs } from './function/arithmetic/add';\nimport { absDocs } from './function/arithmetic/abs';\nimport { qrDocs } from './function/algebra/qr';\nimport { usolveDocs } from './function/algebra/usolve';\nimport { usolveAllDocs } from './function/algebra/usolveAll';\nimport { sluDocs } from './function/algebra/slu';\nimport { rationalizeDocs } from './function/algebra/rationalize';\nimport { simplifyDocs } from './function/algebra/simplify';\nimport { lupDocs } from './function/algebra/lup';\nimport { lsolveDocs } from './function/algebra/lsolve';\nimport { lsolveAllDocs } from './function/algebra/lsolveAll';\nimport { derivativeDocs } from './function/algebra/derivative';\nimport { versionDocs } from './constants/version';\nimport { trueDocs } from './constants/true';\nimport { tauDocs } from './constants/tau';\nimport { SQRT2Docs } from './constants/SQRT2';\nimport { SQRT12Docs } from './constants/SQRT1_2';\nimport { phiDocs } from './constants/phi';\nimport { piDocs } from './constants/pi';\nimport { nullDocs } from './constants/null';\nimport { NaNDocs } from './constants/NaN';\nimport { LOG10EDocs } from './constants/LOG10E';\nimport { LOG2EDocs } from './constants/LOG2E';\nimport { LN10Docs } from './constants/LN10';\nimport { LN2Docs } from './constants/LN2';\nimport { InfinityDocs } from './constants/Infinity';\nimport { iDocs } from './constants/i';\nimport { falseDocs } from './constants/false';\nimport { eDocs } from './constants/e';\nimport { unitDocs } from './construction/unit';\nimport { stringDocs } from './construction/string';\nimport { splitUnitDocs } from './construction/splitUnit';\nimport { sparseDocs } from './construction/sparse';\nimport { numberDocs } from './construction/number';\nimport { matrixDocs } from './construction/matrix';\nimport { indexDocs } from './construction';\nimport { fractionDocs } from './construction/fraction';\nimport { createUnitDocs } from './construction/createUnit';\nimport { complexDocs } from './construction/complex';\nimport { booleanDocs } from './construction/boolean';\nimport { dotPowDocs } from './function/arithmetic/dotPow';\nimport { lusolveDocs } from './function/algebra/lusolve';\nimport { subtractDocs } from './function/arithmetic/subtract';\nimport { varianceDocs } from './function/statistics/variance';\nimport { sinDocs } from './function/trigonometry/sin';\nimport { numericDocs } from './function/utils/numeric';\nimport { columnDocs } from './function/matrix/column';\nimport { rowDocs } from './function/matrix/row';\nimport { rotationMatrixDocs } from './function/matrix/rotationMatrix';\nimport { rotateDocs } from './function/matrix/rotate';\nexport var embeddedDocs = {\n  // construction functions\n  bignumber: bignumberDocs,\n  \"boolean\": booleanDocs,\n  complex: complexDocs,\n  createUnit: createUnitDocs,\n  fraction: fractionDocs,\n  index: indexDocs,\n  matrix: matrixDocs,\n  number: numberDocs,\n  sparse: sparseDocs,\n  splitUnit: splitUnitDocs,\n  string: stringDocs,\n  unit: unitDocs,\n  // constants\n  e: eDocs,\n  E: eDocs,\n  \"false\": falseDocs,\n  i: iDocs,\n  Infinity: InfinityDocs,\n  LN2: LN2Docs,\n  LN10: LN10Docs,\n  LOG2E: LOG2EDocs,\n  LOG10E: LOG10EDocs,\n  NaN: NaNDocs,\n  \"null\": nullDocs,\n  pi: piDocs,\n  PI: piDocs,\n  phi: phiDocs,\n  SQRT1_2: SQRT12Docs,\n  SQRT2: SQRT2Docs,\n  tau: tauDocs,\n  \"true\": trueDocs,\n  version: versionDocs,\n  // physical constants\n  // TODO: more detailed docs for physical constants\n  speedOfLight: {\n    description: 'Speed of light in vacuum',\n    examples: ['speedOfLight']\n  },\n  gravitationConstant: {\n    description: 'Newtonian constant of gravitation',\n    examples: ['gravitationConstant']\n  },\n  planckConstant: {\n    description: 'Planck constant',\n    examples: ['planckConstant']\n  },\n  reducedPlanckConstant: {\n    description: 'Reduced Planck constant',\n    examples: ['reducedPlanckConstant']\n  },\n  magneticConstant: {\n    description: 'Magnetic constant (vacuum permeability)',\n    examples: ['magneticConstant']\n  },\n  electricConstant: {\n    description: 'Electric constant (vacuum permeability)',\n    examples: ['electricConstant']\n  },\n  vacuumImpedance: {\n    description: 'Characteristic impedance of vacuum',\n    examples: ['vacuumImpedance']\n  },\n  coulomb: {\n    description: 'Coulomb\\'s constant',\n    examples: ['coulomb']\n  },\n  elementaryCharge: {\n    description: 'Elementary charge',\n    examples: ['elementaryCharge']\n  },\n  bohrMagneton: {\n    description: 'Borh magneton',\n    examples: ['bohrMagneton']\n  },\n  conductanceQuantum: {\n    description: 'Conductance quantum',\n    examples: ['conductanceQuantum']\n  },\n  inverseConductanceQuantum: {\n    description: 'Inverse conductance quantum',\n    examples: ['inverseConductanceQuantum']\n  },\n  // josephson: {description: 'Josephson constant', examples: ['josephson']},\n  magneticFluxQuantum: {\n    description: 'Magnetic flux quantum',\n    examples: ['magneticFluxQuantum']\n  },\n  nuclearMagneton: {\n    description: 'Nuclear magneton',\n    examples: ['nuclearMagneton']\n  },\n  klitzing: {\n    description: 'Von Klitzing constant',\n    examples: ['klitzing']\n  },\n  bohrRadius: {\n    description: 'Borh radius',\n    examples: ['bohrRadius']\n  },\n  classicalElectronRadius: {\n    description: 'Classical electron radius',\n    examples: ['classicalElectronRadius']\n  },\n  electronMass: {\n    description: 'Electron mass',\n    examples: ['electronMass']\n  },\n  fermiCoupling: {\n    description: 'Fermi coupling constant',\n    examples: ['fermiCoupling']\n  },\n  fineStructure: {\n    description: 'Fine-structure constant',\n    examples: ['fineStructure']\n  },\n  hartreeEnergy: {\n    description: 'Hartree energy',\n    examples: ['hartreeEnergy']\n  },\n  protonMass: {\n    description: 'Proton mass',\n    examples: ['protonMass']\n  },\n  deuteronMass: {\n    description: 'Deuteron Mass',\n    examples: ['deuteronMass']\n  },\n  neutronMass: {\n    description: 'Neutron mass',\n    examples: ['neutronMass']\n  },\n  quantumOfCirculation: {\n    description: 'Quantum of circulation',\n    examples: ['quantumOfCirculation']\n  },\n  rydberg: {\n    description: 'Rydberg constant',\n    examples: ['rydberg']\n  },\n  thomsonCrossSection: {\n    description: 'Thomson cross section',\n    examples: ['thomsonCrossSection']\n  },\n  weakMixingAngle: {\n    description: 'Weak mixing angle',\n    examples: ['weakMixingAngle']\n  },\n  efimovFactor: {\n    description: 'Efimov factor',\n    examples: ['efimovFactor']\n  },\n  atomicMass: {\n    description: 'Atomic mass constant',\n    examples: ['atomicMass']\n  },\n  avogadro: {\n    description: 'Avogadro\\'s number',\n    examples: ['avogadro']\n  },\n  boltzmann: {\n    description: 'Boltzmann constant',\n    examples: ['boltzmann']\n  },\n  faraday: {\n    description: 'Faraday constant',\n    examples: ['faraday']\n  },\n  firstRadiation: {\n    description: 'First radiation constant',\n    examples: ['firstRadiation']\n  },\n  loschmidt: {\n    description: 'Loschmidt constant at T=273.15 K and p=101.325 kPa',\n    examples: ['loschmidt']\n  },\n  gasConstant: {\n    description: 'Gas constant',\n    examples: ['gasConstant']\n  },\n  molarPlanckConstant: {\n    description: 'Molar Planck constant',\n    examples: ['molarPlanckConstant']\n  },\n  molarVolume: {\n    description: 'Molar volume of an ideal gas at T=273.15 K and p=101.325 kPa',\n    examples: ['molarVolume']\n  },\n  sackurTetrode: {\n    description: 'Sackur-Tetrode constant at T=1 K and p=101.325 kPa',\n    examples: ['sackurTetrode']\n  },\n  secondRadiation: {\n    description: 'Second radiation constant',\n    examples: ['secondRadiation']\n  },\n  stefanBoltzmann: {\n    description: 'Stefan-Boltzmann constant',\n    examples: ['stefanBoltzmann']\n  },\n  wienDisplacement: {\n    description: 'Wien displacement law constant',\n    examples: ['wienDisplacement']\n  },\n  // spectralRadiance: {description: 'First radiation constant for spectral radiance', examples: ['spectralRadiance']},\n  molarMass: {\n    description: 'Molar mass constant',\n    examples: ['molarMass']\n  },\n  molarMassC12: {\n    description: 'Molar mass constant of carbon-12',\n    examples: ['molarMassC12']\n  },\n  gravity: {\n    description: 'Standard acceleration of gravity (standard acceleration of free-fall on Earth)',\n    examples: ['gravity']\n  },\n  planckLength: {\n    description: 'Planck length',\n    examples: ['planckLength']\n  },\n  planckMass: {\n    description: 'Planck mass',\n    examples: ['planckMass']\n  },\n  planckTime: {\n    description: 'Planck time',\n    examples: ['planckTime']\n  },\n  planckCharge: {\n    description: 'Planck charge',\n    examples: ['planckCharge']\n  },\n  planckTemperature: {\n    description: 'Planck temperature',\n    examples: ['planckTemperature']\n  },\n  // functions - algebra\n  derivative: derivativeDocs,\n  lsolve: lsolveDocs,\n  lsolveAll: lsolveAllDocs,\n  lup: lupDocs,\n  lusolve: lusolveDocs,\n  simplify: simplifyDocs,\n  rationalize: rationalizeDocs,\n  slu: sluDocs,\n  usolve: usolveDocs,\n  usolveAll: usolveAllDocs,\n  qr: qrDocs,\n  // functions - arithmetic\n  abs: absDocs,\n  add: addDocs,\n  cbrt: cbrtDocs,\n  ceil: ceilDocs,\n  cube: cubeDocs,\n  divide: divideDocs,\n  dotDivide: dotDivideDocs,\n  dotMultiply: dotMultiplyDocs,\n  dotPow: dotPowDocs,\n  exp: expDocs,\n  expm: expmDocs,\n  expm1: expm1Docs,\n  fix: fixDocs,\n  floor: floorDocs,\n  gcd: gcdDocs,\n  hypot: hypotDocs,\n  lcm: lcmDocs,\n  log: logDocs,\n  log2: log2Docs,\n  log1p: log1pDocs,\n  log10: log10Docs,\n  mod: modDocs,\n  multiply: multiplyDocs,\n  norm: normDocs,\n  nthRoot: nthRootDocs,\n  nthRoots: nthRootsDocs,\n  pow: powDocs,\n  round: roundDocs,\n  sign: signDocs,\n  sqrt: sqrtDocs,\n  sqrtm: sqrtmDocs,\n  square: squareDocs,\n  subtract: subtractDocs,\n  unaryMinus: unaryMinusDocs,\n  unaryPlus: unaryPlusDocs,\n  xgcd: xgcdDocs,\n  // functions - bitwise\n  bitAnd: bitAndDocs,\n  bitNot: bitNotDocs,\n  bitOr: bitOrDocs,\n  bitXor: bitXorDocs,\n  leftShift: leftShiftDocs,\n  rightArithShift: rightArithShiftDocs,\n  rightLogShift: rightLogShiftDocs,\n  // functions - combinatorics\n  bellNumbers: bellNumbersDocs,\n  catalan: catalanDocs,\n  composition: compositionDocs,\n  stirlingS2: stirlingS2Docs,\n  // functions - core\n  config: configDocs,\n  \"import\": importDocs,\n  typed: typedDocs,\n  // functions - complex\n  arg: argDocs,\n  conj: conjDocs,\n  re: reDocs,\n  im: imDocs,\n  // functions - expression\n  evaluate: evaluateDocs,\n  help: helpDocs,\n  // functions - geometry\n  distance: distanceDocs,\n  intersect: intersectDocs,\n  // functions - logical\n  and: andDocs,\n  not: notDocs,\n  or: orDocs,\n  xor: xorDocs,\n  // functions - matrix\n  concat: concatDocs,\n  cross: crossDocs,\n  column: columnDocs,\n  ctranspose: ctransposeDocs,\n  det: detDocs,\n  diag: diagDocs,\n  diff: diffDocs,\n  dot: dotDocs,\n  getMatrixDataType: getMatrixDataTypeDocs,\n  identity: identityDocs,\n  filter: filterDocs,\n  flatten: flattenDocs,\n  forEach: forEachDocs,\n  inv: invDocs,\n  eigs: eigsDocs,\n  kron: kronDocs,\n  map: mapDocs,\n  ones: onesDocs,\n  partitionSelect: partitionSelectDocs,\n  range: rangeDocs,\n  resize: resizeDocs,\n  reshape: reshapeDocs,\n  rotate: rotateDocs,\n  rotationMatrix: rotationMatrixDocs,\n  row: rowDocs,\n  size: sizeDocs,\n  sort: sortDocs,\n  squeeze: squeezeDocs,\n  subset: subsetDocs,\n  trace: traceDocs,\n  transpose: transposeDocs,\n  zeros: zerosDocs,\n  // functions - probability\n  combinations: combinationsDocs,\n  combinationsWithRep: combinationsWithRepDocs,\n  // distribution: distributionDocs,\n  factorial: factorialDocs,\n  gamma: gammaDocs,\n  kldivergence: kldivergenceDocs,\n  multinomial: multinomialDocs,\n  permutations: permutationsDocs,\n  pickRandom: pickRandomDocs,\n  random: randomDocs,\n  randomInt: randomIntDocs,\n  // functions - relational\n  compare: compareDocs,\n  compareNatural: compareNaturalDocs,\n  compareText: compareTextDocs,\n  deepEqual: deepEqualDocs,\n  equal: equalDocs,\n  equalText: equalTextDocs,\n  larger: largerDocs,\n  largerEq: largerEqDocs,\n  smaller: smallerDocs,\n  smallerEq: smallerEqDocs,\n  unequal: unequalDocs,\n  // functions - set\n  setCartesian: setCartesianDocs,\n  setDifference: setDifferenceDocs,\n  setDistinct: setDistinctDocs,\n  setIntersect: setIntersectDocs,\n  setIsSubset: setIsSubsetDocs,\n  setMultiplicity: setMultiplicityDocs,\n  setPowerset: setPowersetDocs,\n  setSize: setSizeDocs,\n  setSymDifference: setSymDifferenceDocs,\n  setUnion: setUnionDocs,\n  // functions - special\n  erf: erfDocs,\n  // functions - statistics\n  mad: madDocs,\n  max: maxDocs,\n  mean: meanDocs,\n  median: medianDocs,\n  min: minDocs,\n  mode: modeDocs,\n  prod: prodDocs,\n  quantileSeq: quantileSeqDocs,\n  std: stdDocs,\n  sum: sumDocs,\n  variance: varianceDocs,\n  // functions - trigonometry\n  acos: acosDocs,\n  acosh: acoshDocs,\n  acot: acotDocs,\n  acoth: acothDocs,\n  acsc: acscDocs,\n  acsch: acschDocs,\n  asec: asecDocs,\n  asech: asechDocs,\n  asin: asinDocs,\n  asinh: asinhDocs,\n  atan: atanDocs,\n  atanh: atanhDocs,\n  atan2: atan2Docs,\n  cos: cosDocs,\n  cosh: coshDocs,\n  cot: cotDocs,\n  coth: cothDocs,\n  csc: cscDocs,\n  csch: cschDocs,\n  sec: secDocs,\n  sech: sechDocs,\n  sin: sinDocs,\n  sinh: sinhDocs,\n  tan: tanDocs,\n  tanh: tanhDocs,\n  // functions - units\n  to: toDocs,\n  // functions - utils\n  clone: cloneDocs,\n  format: formatDocs,\n  bin: binDocs,\n  oct: octDocs,\n  hex: hexDocs,\n  isNaN: isNaNDocs,\n  isInteger: isIntegerDocs,\n  isNegative: isNegativeDocs,\n  isNumeric: isNumericDocs,\n  hasNumericValue: hasNumericValueDocs,\n  isPositive: isPositiveDocs,\n  isPrime: isPrimeDocs,\n  isZero: isZeroDocs,\n  // print: printDocs // TODO: add documentation for print as soon as the parser supports objects.\n  typeOf: typeOfDocs,\n  numeric: numericDocs\n};","map":{"version":3,"names":["bignumberDocs","typeOfDocs","isZeroDocs","isPrimeDocs","isPositiveDocs","isNumericDocs","hasNumericValueDocs","isNegativeDocs","isIntegerDocs","isNaNDocs","formatDocs","binDocs","octDocs","hexDocs","cloneDocs","toDocs","tanhDocs","tanDocs","sinhDocs","sechDocs","secDocs","cschDocs","cscDocs","cothDocs","cotDocs","coshDocs","cosDocs","atan2Docs","atanhDocs","atanDocs","asinhDocs","asinDocs","asechDocs","asecDocs","acschDocs","acscDocs","acothDocs","acotDocs","acoshDocs","acosDocs","sumDocs","stdDocs","quantileSeqDocs","prodDocs","modeDocs","minDocs","medianDocs","meanDocs","maxDocs","madDocs","erfDocs","setUnionDocs","setSymDifferenceDocs","setSizeDocs","setPowersetDocs","setMultiplicityDocs","setIsSubsetDocs","setIntersectDocs","setDistinctDocs","setDifferenceDocs","setCartesianDocs","unequalDocs","smallerEqDocs","smallerDocs","largerEqDocs","largerDocs","equalTextDocs","equalDocs","deepEqualDocs","compareTextDocs","compareNaturalDocs","compareDocs","randomIntDocs","randomDocs","pickRandomDocs","permutationsDocs","multinomialDocs","kldivergenceDocs","gammaDocs","factorialDocs","combinationsDocs","combinationsWithRepDocs","zerosDocs","transposeDocs","traceDocs","subsetDocs","squeezeDocs","sortDocs","sizeDocs","diffDocs","reshapeDocs","resizeDocs","rangeDocs","partitionSelectDocs","onesDocs","mapDocs","kronDocs","invDocs","forEachDocs","flattenDocs","filterDocs","identityDocs","getMatrixDataTypeDocs","dotDocs","diagDocs","detDocs","ctransposeDocs","crossDocs","concatDocs","xorDocs","orDocs","notDocs","andDocs","intersectDocs","distanceDocs","helpDocs","evaluateDocs","imDocs","reDocs","conjDocs","argDocs","typedDocs","importDocs","configDocs","stirlingS2Docs","compositionDocs","catalanDocs","bellNumbersDocs","rightLogShiftDocs","rightArithShiftDocs","leftShiftDocs","bitXorDocs","bitOrDocs","bitNotDocs","bitAndDocs","xgcdDocs","unaryPlusDocs","unaryMinusDocs","squareDocs","sqrtmDocs","sqrtDocs","signDocs","roundDocs","powDocs","nthRootsDocs","nthRootDocs","normDocs","multiplyDocs","modDocs","log10Docs","log1pDocs","log2Docs","logDocs","lcmDocs","hypotDocs","gcdDocs","floorDocs","fixDocs","expm1Docs","expmDocs","eigsDocs","expDocs","dotMultiplyDocs","dotDivideDocs","divideDocs","cubeDocs","ceilDocs","cbrtDocs","addDocs","absDocs","qrDocs","usolveDocs","usolveAllDocs","sluDocs","rationalizeDocs","simplifyDocs","lupDocs","lsolveDocs","lsolveAllDocs","derivativeDocs","versionDocs","trueDocs","tauDocs","SQRT2Docs","SQRT12Docs","phiDocs","piDocs","nullDocs","NaNDocs","LOG10EDocs","LOG2EDocs","LN10Docs","LN2Docs","InfinityDocs","iDocs","falseDocs","eDocs","unitDocs","stringDocs","splitUnitDocs","sparseDocs","numberDocs","matrixDocs","indexDocs","fractionDocs","createUnitDocs","complexDocs","booleanDocs","dotPowDocs","lusolveDocs","subtractDocs","varianceDocs","sinDocs","numericDocs","columnDocs","rowDocs","rotationMatrixDocs","rotateDocs","embeddedDocs","bignumber","complex","createUnit","fraction","index","matrix","number","sparse","splitUnit","string","unit","e","E","i","Infinity","LN2","LN10","LOG2E","LOG10E","NaN","pi","PI","phi","SQRT1_2","SQRT2","tau","version","speedOfLight","description","examples","gravitationConstant","planckConstant","reducedPlanckConstant","magneticConstant","electricConstant","vacuumImpedance","coulomb","elementaryCharge","bohrMagneton","conductanceQuantum","inverseConductanceQuantum","magneticFluxQuantum","nuclearMagneton","klitzing","bohrRadius","classicalElectronRadius","electronMass","fermiCoupling","fineStructure","hartreeEnergy","protonMass","deuteronMass","neutronMass","quantumOfCirculation","rydberg","thomsonCrossSection","weakMixingAngle","efimovFactor","atomicMass","avogadro","boltzmann","faraday","firstRadiation","loschmidt","gasConstant","molarPlanckConstant","molarVolume","sackurTetrode","secondRadiation","stefanBoltzmann","wienDisplacement","molarMass","molarMassC12","gravity","planckLength","planckMass","planckTime","planckCharge","planckTemperature","derivative","lsolve","lsolveAll","lup","lusolve","simplify","rationalize","slu","usolve","usolveAll","qr","abs","add","cbrt","ceil","cube","divide","dotDivide","dotMultiply","dotPow","exp","expm","expm1","fix","floor","gcd","hypot","lcm","log","log2","log1p","log10","mod","multiply","norm","nthRoot","nthRoots","pow","round","sign","sqrt","sqrtm","square","subtract","unaryMinus","unaryPlus","xgcd","bitAnd","bitNot","bitOr","bitXor","leftShift","rightArithShift","rightLogShift","bellNumbers","catalan","composition","stirlingS2","config","typed","arg","conj","re","im","evaluate","help","distance","intersect","and","not","or","xor","concat","cross","column","ctranspose","det","diag","diff","dot","getMatrixDataType","identity","filter","flatten","forEach","inv","eigs","kron","map","ones","partitionSelect","range","resize","reshape","rotate","rotationMatrix","row","size","sort","squeeze","subset","trace","transpose","zeros","combinations","combinationsWithRep","factorial","gamma","kldivergence","multinomial","permutations","pickRandom","random","randomInt","compare","compareNatural","compareText","deepEqual","equal","equalText","larger","largerEq","smaller","smallerEq","unequal","setCartesian","setDifference","setDistinct","setIntersect","setIsSubset","setMultiplicity","setPowerset","setSize","setSymDifference","setUnion","erf","mad","max","mean","median","min","mode","prod","quantileSeq","std","sum","variance","acos","acosh","acot","acoth","acsc","acsch","asec","asech","asin","asinh","atan","atanh","atan2","cos","cosh","cot","coth","csc","csch","sec","sech","sin","sinh","tan","tanh","to","clone","format","bin","oct","hex","isNaN","isInteger","isNegative","isNumeric","hasNumericValue","isPositive","isPrime","isZero","typeOf","numeric"],"sources":["F:/extension/SEM 7/NN/Lab/my lab/P/temp/app/node_modules/mathjs/es/expression/embeddedDocs/embeddedDocs.js"],"sourcesContent":["import { bignumberDocs } from './construction/bignumber';\nimport { typeOfDocs } from './function/utils/typeOf';\nimport { isZeroDocs } from './function/utils/isZero';\nimport { isPrimeDocs } from './function/utils/isPrime';\nimport { isPositiveDocs } from './function/utils/isPositive';\nimport { isNumericDocs } from './function/utils/isNumeric';\nimport { hasNumericValueDocs } from './function/utils/hasNumericValue';\nimport { isNegativeDocs } from './function/utils/isNegative';\nimport { isIntegerDocs } from './function/utils/isInteger';\nimport { isNaNDocs } from './function/utils/isNaN';\nimport { formatDocs } from './function/utils/format';\nimport { binDocs } from './function/utils/bin';\nimport { octDocs } from './function/utils/oct';\nimport { hexDocs } from './function/utils/hex';\nimport { cloneDocs } from './function/utils/clone';\nimport { toDocs } from './function/units/to';\nimport { tanhDocs } from './function/trigonometry/tanh';\nimport { tanDocs } from './function/trigonometry/tan';\nimport { sinhDocs } from './function/trigonometry/sinh';\nimport { sechDocs } from './function/trigonometry/sech';\nimport { secDocs } from './function/trigonometry/sec';\nimport { cschDocs } from './function/trigonometry/csch';\nimport { cscDocs } from './function/trigonometry/csc';\nimport { cothDocs } from './function/trigonometry/coth';\nimport { cotDocs } from './function/trigonometry/cot';\nimport { coshDocs } from './function/trigonometry/cosh';\nimport { cosDocs } from './function/trigonometry/cos';\nimport { atan2Docs } from './function/trigonometry/atan2';\nimport { atanhDocs } from './function/trigonometry/atanh';\nimport { atanDocs } from './function/trigonometry/atan';\nimport { asinhDocs } from './function/trigonometry/asinh';\nimport { asinDocs } from './function/trigonometry/asin';\nimport { asechDocs } from './function/trigonometry/asech';\nimport { asecDocs } from './function/trigonometry/asec';\nimport { acschDocs } from './function/trigonometry/acsch';\nimport { acscDocs } from './function/trigonometry/acsc';\nimport { acothDocs } from './function/trigonometry/acoth';\nimport { acotDocs } from './function/trigonometry/acot';\nimport { acoshDocs } from './function/trigonometry/acosh';\nimport { acosDocs } from './function/trigonometry/acos';\nimport { sumDocs } from './function/statistics/sum';\nimport { stdDocs } from './function/statistics/std';\nimport { quantileSeqDocs } from './function/statistics/quantileSeq';\nimport { prodDocs } from './function/statistics/prod';\nimport { modeDocs } from './function/statistics/mode';\nimport { minDocs } from './function/statistics/min';\nimport { medianDocs } from './function/statistics/median';\nimport { meanDocs } from './function/statistics/mean';\nimport { maxDocs } from './function/statistics/max';\nimport { madDocs } from './function/statistics/mad';\nimport { erfDocs } from './function/special/erf';\nimport { setUnionDocs } from './function/set/setUnion';\nimport { setSymDifferenceDocs } from './function/set/setSymDifference';\nimport { setSizeDocs } from './function/set/setSize';\nimport { setPowersetDocs } from './function/set/setPowerset';\nimport { setMultiplicityDocs } from './function/set/setMultiplicity';\nimport { setIsSubsetDocs } from './function/set/setIsSubset';\nimport { setIntersectDocs } from './function/set/setIntersect';\nimport { setDistinctDocs } from './function/set/setDistinct';\nimport { setDifferenceDocs } from './function/set/setDifference';\nimport { setCartesianDocs } from './function/set/setCartesian';\nimport { unequalDocs } from './function/relational/unequal';\nimport { smallerEqDocs } from './function/relational/smallerEq';\nimport { smallerDocs } from './function/relational/smaller';\nimport { largerEqDocs } from './function/relational/largerEq';\nimport { largerDocs } from './function/relational/larger';\nimport { equalTextDocs } from './function/relational/equalText';\nimport { equalDocs } from './function/relational/equal';\nimport { deepEqualDocs } from './function/relational/deepEqual';\nimport { compareTextDocs } from './function/relational/compareText';\nimport { compareNaturalDocs } from './function/relational/compareNatural';\nimport { compareDocs } from './function/relational/compare';\nimport { randomIntDocs } from './function/probability/randomInt';\nimport { randomDocs } from './function/probability/random';\nimport { pickRandomDocs } from './function/probability/pickRandom';\nimport { permutationsDocs } from './function/probability/permutations';\nimport { multinomialDocs } from './function/probability/multinomial';\nimport { kldivergenceDocs } from './function/probability/kldivergence';\nimport { gammaDocs } from './function/probability/gamma';\nimport { factorialDocs } from './function/probability/factorial';\nimport { combinationsDocs } from './function/probability/combinations';\nimport { combinationsWithRepDocs } from './function/probability/combinationsWithRep';\nimport { zerosDocs } from './function/matrix/zeros';\nimport { transposeDocs } from './function/matrix/transpose';\nimport { traceDocs } from './function/matrix/trace';\nimport { subsetDocs } from './function/matrix/subset';\nimport { squeezeDocs } from './function/matrix/squeeze';\nimport { sortDocs } from './function/matrix/sort';\nimport { sizeDocs } from './function/matrix/size';\nimport { diffDocs } from './function/matrix/diff';\nimport { reshapeDocs } from './function/matrix/reshape';\nimport { resizeDocs } from './function/matrix/resize';\nimport { rangeDocs } from './function/matrix/range';\nimport { partitionSelectDocs } from './function/matrix/partitionSelect';\nimport { onesDocs } from './function/matrix/ones';\nimport { mapDocs } from './function/matrix/map';\nimport { kronDocs } from './function/matrix/kron';\nimport { invDocs } from './function/matrix/inv';\nimport { forEachDocs } from './function/matrix/forEach';\nimport { flattenDocs } from './function/matrix/flatten';\nimport { filterDocs } from './function/matrix/filter';\nimport { identityDocs } from './function/matrix/identity';\nimport { getMatrixDataTypeDocs } from './function/matrix/getMatrixDataType';\nimport { dotDocs } from './function/matrix/dot';\nimport { diagDocs } from './function/matrix/diag';\nimport { detDocs } from './function/matrix/det';\nimport { ctransposeDocs } from './function/matrix/ctranspose';\nimport { crossDocs } from './function/matrix/cross';\nimport { concatDocs } from './function/matrix/concat';\nimport { xorDocs } from './function/logical/xor';\nimport { orDocs } from './function/logical/or';\nimport { notDocs } from './function/logical/not';\nimport { andDocs } from './function/logical/and';\nimport { intersectDocs } from './function/geometry/intersect';\nimport { distanceDocs } from './function/geometry/distance';\nimport { helpDocs } from './function/expression/help';\nimport { evaluateDocs } from './function/expression/evaluate';\nimport { imDocs } from './function/complex/im';\nimport { reDocs } from './function/complex/re';\nimport { conjDocs } from './function/complex/conj';\nimport { argDocs } from './function/complex/arg';\nimport { typedDocs } from './core/typed';\nimport { importDocs } from './core/import';\nimport { configDocs } from './core/config';\nimport { stirlingS2Docs } from './function/combinatorics/stirlingS2';\nimport { compositionDocs } from './function/combinatorics/composition';\nimport { catalanDocs } from './function/combinatorics/catalan';\nimport { bellNumbersDocs } from './function/combinatorics/bellNumbers';\nimport { rightLogShiftDocs } from './function/bitwise/rightLogShift';\nimport { rightArithShiftDocs } from './function/bitwise/rightArithShift';\nimport { leftShiftDocs } from './function/bitwise/leftShift';\nimport { bitXorDocs } from './function/bitwise/bitXor';\nimport { bitOrDocs } from './function/bitwise/bitOr';\nimport { bitNotDocs } from './function/bitwise/bitNot';\nimport { bitAndDocs } from './function/bitwise/bitAnd';\nimport { xgcdDocs } from './function/arithmetic/xgcd';\nimport { unaryPlusDocs } from './function/arithmetic/unaryPlus';\nimport { unaryMinusDocs } from './function/arithmetic/unaryMinus';\nimport { squareDocs } from './function/arithmetic/square';\nimport { sqrtmDocs } from './function/arithmetic/sqrtm';\nimport { sqrtDocs } from './function/arithmetic/sqrt';\nimport { signDocs } from './function/arithmetic/sign';\nimport { roundDocs } from './function/arithmetic/round';\nimport { powDocs } from './function/arithmetic/pow';\nimport { nthRootsDocs } from './function/arithmetic/nthRoots';\nimport { nthRootDocs } from './function/arithmetic/nthRoot';\nimport { normDocs } from './function/arithmetic/norm';\nimport { multiplyDocs } from './function/arithmetic/multiply';\nimport { modDocs } from './function/arithmetic/mod';\nimport { log10Docs } from './function/arithmetic/log10';\nimport { log1pDocs } from './function/arithmetic/log1p';\nimport { log2Docs } from './function/arithmetic/log2';\nimport { logDocs } from './function/arithmetic/log';\nimport { lcmDocs } from './function/arithmetic/lcm';\nimport { hypotDocs } from './function/arithmetic/hypot';\nimport { gcdDocs } from './function/arithmetic/gcd';\nimport { floorDocs } from './function/arithmetic/floor';\nimport { fixDocs } from './function/arithmetic/fix';\nimport { expm1Docs } from './function/arithmetic/expm1';\nimport { expmDocs } from './function/arithmetic/expm';\nimport { eigsDocs } from './function/matrix/eigs';\nimport { expDocs } from './function/arithmetic/exp';\nimport { dotMultiplyDocs } from './function/arithmetic/dotMultiply';\nimport { dotDivideDocs } from './function/arithmetic/dotDivide';\nimport { divideDocs } from './function/arithmetic/divide';\nimport { cubeDocs } from './function/arithmetic/cube';\nimport { ceilDocs } from './function/arithmetic/ceil';\nimport { cbrtDocs } from './function/arithmetic/cbrt';\nimport { addDocs } from './function/arithmetic/add';\nimport { absDocs } from './function/arithmetic/abs';\nimport { qrDocs } from './function/algebra/qr';\nimport { usolveDocs } from './function/algebra/usolve';\nimport { usolveAllDocs } from './function/algebra/usolveAll';\nimport { sluDocs } from './function/algebra/slu';\nimport { rationalizeDocs } from './function/algebra/rationalize';\nimport { simplifyDocs } from './function/algebra/simplify';\nimport { lupDocs } from './function/algebra/lup';\nimport { lsolveDocs } from './function/algebra/lsolve';\nimport { lsolveAllDocs } from './function/algebra/lsolveAll';\nimport { derivativeDocs } from './function/algebra/derivative';\nimport { versionDocs } from './constants/version';\nimport { trueDocs } from './constants/true';\nimport { tauDocs } from './constants/tau';\nimport { SQRT2Docs } from './constants/SQRT2';\nimport { SQRT12Docs } from './constants/SQRT1_2';\nimport { phiDocs } from './constants/phi';\nimport { piDocs } from './constants/pi';\nimport { nullDocs } from './constants/null';\nimport { NaNDocs } from './constants/NaN';\nimport { LOG10EDocs } from './constants/LOG10E';\nimport { LOG2EDocs } from './constants/LOG2E';\nimport { LN10Docs } from './constants/LN10';\nimport { LN2Docs } from './constants/LN2';\nimport { InfinityDocs } from './constants/Infinity';\nimport { iDocs } from './constants/i';\nimport { falseDocs } from './constants/false';\nimport { eDocs } from './constants/e';\nimport { unitDocs } from './construction/unit';\nimport { stringDocs } from './construction/string';\nimport { splitUnitDocs } from './construction/splitUnit';\nimport { sparseDocs } from './construction/sparse';\nimport { numberDocs } from './construction/number';\nimport { matrixDocs } from './construction/matrix';\nimport { indexDocs } from './construction';\nimport { fractionDocs } from './construction/fraction';\nimport { createUnitDocs } from './construction/createUnit';\nimport { complexDocs } from './construction/complex';\nimport { booleanDocs } from './construction/boolean';\nimport { dotPowDocs } from './function/arithmetic/dotPow';\nimport { lusolveDocs } from './function/algebra/lusolve';\nimport { subtractDocs } from './function/arithmetic/subtract';\nimport { varianceDocs } from './function/statistics/variance';\nimport { sinDocs } from './function/trigonometry/sin';\nimport { numericDocs } from './function/utils/numeric';\nimport { columnDocs } from './function/matrix/column';\nimport { rowDocs } from './function/matrix/row';\nimport { rotationMatrixDocs } from './function/matrix/rotationMatrix';\nimport { rotateDocs } from './function/matrix/rotate';\nexport var embeddedDocs = {\n  // construction functions\n  bignumber: bignumberDocs,\n  \"boolean\": booleanDocs,\n  complex: complexDocs,\n  createUnit: createUnitDocs,\n  fraction: fractionDocs,\n  index: indexDocs,\n  matrix: matrixDocs,\n  number: numberDocs,\n  sparse: sparseDocs,\n  splitUnit: splitUnitDocs,\n  string: stringDocs,\n  unit: unitDocs,\n  // constants\n  e: eDocs,\n  E: eDocs,\n  \"false\": falseDocs,\n  i: iDocs,\n  Infinity: InfinityDocs,\n  LN2: LN2Docs,\n  LN10: LN10Docs,\n  LOG2E: LOG2EDocs,\n  LOG10E: LOG10EDocs,\n  NaN: NaNDocs,\n  \"null\": nullDocs,\n  pi: piDocs,\n  PI: piDocs,\n  phi: phiDocs,\n  SQRT1_2: SQRT12Docs,\n  SQRT2: SQRT2Docs,\n  tau: tauDocs,\n  \"true\": trueDocs,\n  version: versionDocs,\n  // physical constants\n  // TODO: more detailed docs for physical constants\n  speedOfLight: {\n    description: 'Speed of light in vacuum',\n    examples: ['speedOfLight']\n  },\n  gravitationConstant: {\n    description: 'Newtonian constant of gravitation',\n    examples: ['gravitationConstant']\n  },\n  planckConstant: {\n    description: 'Planck constant',\n    examples: ['planckConstant']\n  },\n  reducedPlanckConstant: {\n    description: 'Reduced Planck constant',\n    examples: ['reducedPlanckConstant']\n  },\n  magneticConstant: {\n    description: 'Magnetic constant (vacuum permeability)',\n    examples: ['magneticConstant']\n  },\n  electricConstant: {\n    description: 'Electric constant (vacuum permeability)',\n    examples: ['electricConstant']\n  },\n  vacuumImpedance: {\n    description: 'Characteristic impedance of vacuum',\n    examples: ['vacuumImpedance']\n  },\n  coulomb: {\n    description: 'Coulomb\\'s constant',\n    examples: ['coulomb']\n  },\n  elementaryCharge: {\n    description: 'Elementary charge',\n    examples: ['elementaryCharge']\n  },\n  bohrMagneton: {\n    description: 'Borh magneton',\n    examples: ['bohrMagneton']\n  },\n  conductanceQuantum: {\n    description: 'Conductance quantum',\n    examples: ['conductanceQuantum']\n  },\n  inverseConductanceQuantum: {\n    description: 'Inverse conductance quantum',\n    examples: ['inverseConductanceQuantum']\n  },\n  // josephson: {description: 'Josephson constant', examples: ['josephson']},\n  magneticFluxQuantum: {\n    description: 'Magnetic flux quantum',\n    examples: ['magneticFluxQuantum']\n  },\n  nuclearMagneton: {\n    description: 'Nuclear magneton',\n    examples: ['nuclearMagneton']\n  },\n  klitzing: {\n    description: 'Von Klitzing constant',\n    examples: ['klitzing']\n  },\n  bohrRadius: {\n    description: 'Borh radius',\n    examples: ['bohrRadius']\n  },\n  classicalElectronRadius: {\n    description: 'Classical electron radius',\n    examples: ['classicalElectronRadius']\n  },\n  electronMass: {\n    description: 'Electron mass',\n    examples: ['electronMass']\n  },\n  fermiCoupling: {\n    description: 'Fermi coupling constant',\n    examples: ['fermiCoupling']\n  },\n  fineStructure: {\n    description: 'Fine-structure constant',\n    examples: ['fineStructure']\n  },\n  hartreeEnergy: {\n    description: 'Hartree energy',\n    examples: ['hartreeEnergy']\n  },\n  protonMass: {\n    description: 'Proton mass',\n    examples: ['protonMass']\n  },\n  deuteronMass: {\n    description: 'Deuteron Mass',\n    examples: ['deuteronMass']\n  },\n  neutronMass: {\n    description: 'Neutron mass',\n    examples: ['neutronMass']\n  },\n  quantumOfCirculation: {\n    description: 'Quantum of circulation',\n    examples: ['quantumOfCirculation']\n  },\n  rydberg: {\n    description: 'Rydberg constant',\n    examples: ['rydberg']\n  },\n  thomsonCrossSection: {\n    description: 'Thomson cross section',\n    examples: ['thomsonCrossSection']\n  },\n  weakMixingAngle: {\n    description: 'Weak mixing angle',\n    examples: ['weakMixingAngle']\n  },\n  efimovFactor: {\n    description: 'Efimov factor',\n    examples: ['efimovFactor']\n  },\n  atomicMass: {\n    description: 'Atomic mass constant',\n    examples: ['atomicMass']\n  },\n  avogadro: {\n    description: 'Avogadro\\'s number',\n    examples: ['avogadro']\n  },\n  boltzmann: {\n    description: 'Boltzmann constant',\n    examples: ['boltzmann']\n  },\n  faraday: {\n    description: 'Faraday constant',\n    examples: ['faraday']\n  },\n  firstRadiation: {\n    description: 'First radiation constant',\n    examples: ['firstRadiation']\n  },\n  loschmidt: {\n    description: 'Loschmidt constant at T=273.15 K and p=101.325 kPa',\n    examples: ['loschmidt']\n  },\n  gasConstant: {\n    description: 'Gas constant',\n    examples: ['gasConstant']\n  },\n  molarPlanckConstant: {\n    description: 'Molar Planck constant',\n    examples: ['molarPlanckConstant']\n  },\n  molarVolume: {\n    description: 'Molar volume of an ideal gas at T=273.15 K and p=101.325 kPa',\n    examples: ['molarVolume']\n  },\n  sackurTetrode: {\n    description: 'Sackur-Tetrode constant at T=1 K and p=101.325 kPa',\n    examples: ['sackurTetrode']\n  },\n  secondRadiation: {\n    description: 'Second radiation constant',\n    examples: ['secondRadiation']\n  },\n  stefanBoltzmann: {\n    description: 'Stefan-Boltzmann constant',\n    examples: ['stefanBoltzmann']\n  },\n  wienDisplacement: {\n    description: 'Wien displacement law constant',\n    examples: ['wienDisplacement']\n  },\n  // spectralRadiance: {description: 'First radiation constant for spectral radiance', examples: ['spectralRadiance']},\n  molarMass: {\n    description: 'Molar mass constant',\n    examples: ['molarMass']\n  },\n  molarMassC12: {\n    description: 'Molar mass constant of carbon-12',\n    examples: ['molarMassC12']\n  },\n  gravity: {\n    description: 'Standard acceleration of gravity (standard acceleration of free-fall on Earth)',\n    examples: ['gravity']\n  },\n  planckLength: {\n    description: 'Planck length',\n    examples: ['planckLength']\n  },\n  planckMass: {\n    description: 'Planck mass',\n    examples: ['planckMass']\n  },\n  planckTime: {\n    description: 'Planck time',\n    examples: ['planckTime']\n  },\n  planckCharge: {\n    description: 'Planck charge',\n    examples: ['planckCharge']\n  },\n  planckTemperature: {\n    description: 'Planck temperature',\n    examples: ['planckTemperature']\n  },\n  // functions - algebra\n  derivative: derivativeDocs,\n  lsolve: lsolveDocs,\n  lsolveAll: lsolveAllDocs,\n  lup: lupDocs,\n  lusolve: lusolveDocs,\n  simplify: simplifyDocs,\n  rationalize: rationalizeDocs,\n  slu: sluDocs,\n  usolve: usolveDocs,\n  usolveAll: usolveAllDocs,\n  qr: qrDocs,\n  // functions - arithmetic\n  abs: absDocs,\n  add: addDocs,\n  cbrt: cbrtDocs,\n  ceil: ceilDocs,\n  cube: cubeDocs,\n  divide: divideDocs,\n  dotDivide: dotDivideDocs,\n  dotMultiply: dotMultiplyDocs,\n  dotPow: dotPowDocs,\n  exp: expDocs,\n  expm: expmDocs,\n  expm1: expm1Docs,\n  fix: fixDocs,\n  floor: floorDocs,\n  gcd: gcdDocs,\n  hypot: hypotDocs,\n  lcm: lcmDocs,\n  log: logDocs,\n  log2: log2Docs,\n  log1p: log1pDocs,\n  log10: log10Docs,\n  mod: modDocs,\n  multiply: multiplyDocs,\n  norm: normDocs,\n  nthRoot: nthRootDocs,\n  nthRoots: nthRootsDocs,\n  pow: powDocs,\n  round: roundDocs,\n  sign: signDocs,\n  sqrt: sqrtDocs,\n  sqrtm: sqrtmDocs,\n  square: squareDocs,\n  subtract: subtractDocs,\n  unaryMinus: unaryMinusDocs,\n  unaryPlus: unaryPlusDocs,\n  xgcd: xgcdDocs,\n  // functions - bitwise\n  bitAnd: bitAndDocs,\n  bitNot: bitNotDocs,\n  bitOr: bitOrDocs,\n  bitXor: bitXorDocs,\n  leftShift: leftShiftDocs,\n  rightArithShift: rightArithShiftDocs,\n  rightLogShift: rightLogShiftDocs,\n  // functions - combinatorics\n  bellNumbers: bellNumbersDocs,\n  catalan: catalanDocs,\n  composition: compositionDocs,\n  stirlingS2: stirlingS2Docs,\n  // functions - core\n  config: configDocs,\n  \"import\": importDocs,\n  typed: typedDocs,\n  // functions - complex\n  arg: argDocs,\n  conj: conjDocs,\n  re: reDocs,\n  im: imDocs,\n  // functions - expression\n  evaluate: evaluateDocs,\n  help: helpDocs,\n  // functions - geometry\n  distance: distanceDocs,\n  intersect: intersectDocs,\n  // functions - logical\n  and: andDocs,\n  not: notDocs,\n  or: orDocs,\n  xor: xorDocs,\n  // functions - matrix\n  concat: concatDocs,\n  cross: crossDocs,\n  column: columnDocs,\n  ctranspose: ctransposeDocs,\n  det: detDocs,\n  diag: diagDocs,\n  diff: diffDocs,\n  dot: dotDocs,\n  getMatrixDataType: getMatrixDataTypeDocs,\n  identity: identityDocs,\n  filter: filterDocs,\n  flatten: flattenDocs,\n  forEach: forEachDocs,\n  inv: invDocs,\n  eigs: eigsDocs,\n  kron: kronDocs,\n  map: mapDocs,\n  ones: onesDocs,\n  partitionSelect: partitionSelectDocs,\n  range: rangeDocs,\n  resize: resizeDocs,\n  reshape: reshapeDocs,\n  rotate: rotateDocs,\n  rotationMatrix: rotationMatrixDocs,\n  row: rowDocs,\n  size: sizeDocs,\n  sort: sortDocs,\n  squeeze: squeezeDocs,\n  subset: subsetDocs,\n  trace: traceDocs,\n  transpose: transposeDocs,\n  zeros: zerosDocs,\n  // functions - probability\n  combinations: combinationsDocs,\n  combinationsWithRep: combinationsWithRepDocs,\n  // distribution: distributionDocs,\n  factorial: factorialDocs,\n  gamma: gammaDocs,\n  kldivergence: kldivergenceDocs,\n  multinomial: multinomialDocs,\n  permutations: permutationsDocs,\n  pickRandom: pickRandomDocs,\n  random: randomDocs,\n  randomInt: randomIntDocs,\n  // functions - relational\n  compare: compareDocs,\n  compareNatural: compareNaturalDocs,\n  compareText: compareTextDocs,\n  deepEqual: deepEqualDocs,\n  equal: equalDocs,\n  equalText: equalTextDocs,\n  larger: largerDocs,\n  largerEq: largerEqDocs,\n  smaller: smallerDocs,\n  smallerEq: smallerEqDocs,\n  unequal: unequalDocs,\n  // functions - set\n  setCartesian: setCartesianDocs,\n  setDifference: setDifferenceDocs,\n  setDistinct: setDistinctDocs,\n  setIntersect: setIntersectDocs,\n  setIsSubset: setIsSubsetDocs,\n  setMultiplicity: setMultiplicityDocs,\n  setPowerset: setPowersetDocs,\n  setSize: setSizeDocs,\n  setSymDifference: setSymDifferenceDocs,\n  setUnion: setUnionDocs,\n  // functions - special\n  erf: erfDocs,\n  // functions - statistics\n  mad: madDocs,\n  max: maxDocs,\n  mean: meanDocs,\n  median: medianDocs,\n  min: minDocs,\n  mode: modeDocs,\n  prod: prodDocs,\n  quantileSeq: quantileSeqDocs,\n  std: stdDocs,\n  sum: sumDocs,\n  variance: varianceDocs,\n  // functions - trigonometry\n  acos: acosDocs,\n  acosh: acoshDocs,\n  acot: acotDocs,\n  acoth: acothDocs,\n  acsc: acscDocs,\n  acsch: acschDocs,\n  asec: asecDocs,\n  asech: asechDocs,\n  asin: asinDocs,\n  asinh: asinhDocs,\n  atan: atanDocs,\n  atanh: atanhDocs,\n  atan2: atan2Docs,\n  cos: cosDocs,\n  cosh: coshDocs,\n  cot: cotDocs,\n  coth: cothDocs,\n  csc: cscDocs,\n  csch: cschDocs,\n  sec: secDocs,\n  sech: sechDocs,\n  sin: sinDocs,\n  sinh: sinhDocs,\n  tan: tanDocs,\n  tanh: tanhDocs,\n  // functions - units\n  to: toDocs,\n  // functions - utils\n  clone: cloneDocs,\n  format: formatDocs,\n  bin: binDocs,\n  oct: octDocs,\n  hex: hexDocs,\n  isNaN: isNaNDocs,\n  isInteger: isIntegerDocs,\n  isNegative: isNegativeDocs,\n  isNumeric: isNumericDocs,\n  hasNumericValue: hasNumericValueDocs,\n  isPositive: isPositiveDocs,\n  isPrime: isPrimeDocs,\n  isZero: isZeroDocs,\n  // print: printDocs // TODO: add documentation for print as soon as the parser supports objects.\n  typeOf: typeOfDocs,\n  numeric: numericDocs\n};"],"mappings":"AAAA,SAASA,aAAa,QAAQ,0BAA0B;AACxD,SAASC,UAAU,QAAQ,yBAAyB;AACpD,SAASC,UAAU,QAAQ,yBAAyB;AACpD,SAASC,WAAW,QAAQ,0BAA0B;AACtD,SAASC,cAAc,QAAQ,6BAA6B;AAC5D,SAASC,aAAa,QAAQ,4BAA4B;AAC1D,SAASC,mBAAmB,QAAQ,kCAAkC;AACtE,SAASC,cAAc,QAAQ,6BAA6B;AAC5D,SAASC,aAAa,QAAQ,4BAA4B;AAC1D,SAASC,SAAS,QAAQ,wBAAwB;AAClD,SAASC,UAAU,QAAQ,yBAAyB;AACpD,SAASC,OAAO,QAAQ,sBAAsB;AAC9C,SAASC,OAAO,QAAQ,sBAAsB;AAC9C,SAASC,OAAO,QAAQ,sBAAsB;AAC9C,SAASC,SAAS,QAAQ,wBAAwB;AAClD,SAASC,MAAM,QAAQ,qBAAqB;AAC5C,SAASC,QAAQ,QAAQ,8BAA8B;AACvD,SAASC,OAAO,QAAQ,6BAA6B;AACrD,SAASC,QAAQ,QAAQ,8BAA8B;AACvD,SAASC,QAAQ,QAAQ,8BAA8B;AACvD,SAASC,OAAO,QAAQ,6BAA6B;AACrD,SAASC,QAAQ,QAAQ,8BAA8B;AACvD,SAASC,OAAO,QAAQ,6BAA6B;AACrD,SAASC,QAAQ,QAAQ,8BAA8B;AACvD,SAASC,OAAO,QAAQ,6BAA6B;AACrD,SAASC,QAAQ,QAAQ,8BAA8B;AACvD,SAASC,OAAO,QAAQ,6BAA6B;AACrD,SAASC,SAAS,QAAQ,+BAA+B;AACzD,SAASC,SAAS,QAAQ,+BAA+B;AACzD,SAASC,QAAQ,QAAQ,8BAA8B;AACvD,SAASC,SAAS,QAAQ,+BAA+B;AACzD,SAASC,QAAQ,QAAQ,8BAA8B;AACvD,SAASC,SAAS,QAAQ,+BAA+B;AACzD,SAASC,QAAQ,QAAQ,8BAA8B;AACvD,SAASC,SAAS,QAAQ,+BAA+B;AACzD,SAASC,QAAQ,QAAQ,8BAA8B;AACvD,SAASC,SAAS,QAAQ,+BAA+B;AACzD,SAASC,QAAQ,QAAQ,8BAA8B;AACvD,SAASC,SAAS,QAAQ,+BAA+B;AACzD,SAASC,QAAQ,QAAQ,8BAA8B;AACvD,SAASC,OAAO,QAAQ,2BAA2B;AACnD,SAASC,OAAO,QAAQ,2BAA2B;AACnD,SAASC,eAAe,QAAQ,mCAAmC;AACnE,SAASC,QAAQ,QAAQ,4BAA4B;AACrD,SAASC,QAAQ,QAAQ,4BAA4B;AACrD,SAASC,OAAO,QAAQ,2BAA2B;AACnD,SAASC,UAAU,QAAQ,8BAA8B;AACzD,SAASC,QAAQ,QAAQ,4BAA4B;AACrD,SAASC,OAAO,QAAQ,2BAA2B;AACnD,SAASC,OAAO,QAAQ,2BAA2B;AACnD,SAASC,OAAO,QAAQ,wBAAwB;AAChD,SAASC,YAAY,QAAQ,yBAAyB;AACtD,SAASC,oBAAoB,QAAQ,iCAAiC;AACtE,SAASC,WAAW,QAAQ,wBAAwB;AACpD,SAASC,eAAe,QAAQ,4BAA4B;AAC5D,SAASC,mBAAmB,QAAQ,gCAAgC;AACpE,SAASC,eAAe,QAAQ,4BAA4B;AAC5D,SAASC,gBAAgB,QAAQ,6BAA6B;AAC9D,SAASC,eAAe,QAAQ,4BAA4B;AAC5D,SAASC,iBAAiB,QAAQ,8BAA8B;AAChE,SAASC,gBAAgB,QAAQ,6BAA6B;AAC9D,SAASC,WAAW,QAAQ,+BAA+B;AAC3D,SAASC,aAAa,QAAQ,iCAAiC;AAC/D,SAASC,WAAW,QAAQ,+BAA+B;AAC3D,SAASC,YAAY,QAAQ,gCAAgC;AAC7D,SAASC,UAAU,QAAQ,8BAA8B;AACzD,SAASC,aAAa,QAAQ,iCAAiC;AAC/D,SAASC,SAAS,QAAQ,6BAA6B;AACvD,SAASC,aAAa,QAAQ,iCAAiC;AAC/D,SAASC,eAAe,QAAQ,mCAAmC;AACnE,SAASC,kBAAkB,QAAQ,sCAAsC;AACzE,SAASC,WAAW,QAAQ,+BAA+B;AAC3D,SAASC,aAAa,QAAQ,kCAAkC;AAChE,SAASC,UAAU,QAAQ,+BAA+B;AAC1D,SAASC,cAAc,QAAQ,mCAAmC;AAClE,SAASC,gBAAgB,QAAQ,qCAAqC;AACtE,SAASC,eAAe,QAAQ,oCAAoC;AACpE,SAASC,gBAAgB,QAAQ,qCAAqC;AACtE,SAASC,SAAS,QAAQ,8BAA8B;AACxD,SAASC,aAAa,QAAQ,kCAAkC;AAChE,SAASC,gBAAgB,QAAQ,qCAAqC;AACtE,SAASC,uBAAuB,QAAQ,4CAA4C;AACpF,SAASC,SAAS,QAAQ,yBAAyB;AACnD,SAASC,aAAa,QAAQ,6BAA6B;AAC3D,SAASC,SAAS,QAAQ,yBAAyB;AACnD,SAASC,UAAU,QAAQ,0BAA0B;AACrD,SAASC,WAAW,QAAQ,2BAA2B;AACvD,SAASC,QAAQ,QAAQ,wBAAwB;AACjD,SAASC,QAAQ,QAAQ,wBAAwB;AACjD,SAASC,QAAQ,QAAQ,wBAAwB;AACjD,SAASC,WAAW,QAAQ,2BAA2B;AACvD,SAASC,UAAU,QAAQ,0BAA0B;AACrD,SAASC,SAAS,QAAQ,yBAAyB;AACnD,SAASC,mBAAmB,QAAQ,mCAAmC;AACvE,SAASC,QAAQ,QAAQ,wBAAwB;AACjD,SAASC,OAAO,QAAQ,uBAAuB;AAC/C,SAASC,QAAQ,QAAQ,wBAAwB;AACjD,SAASC,OAAO,QAAQ,uBAAuB;AAC/C,SAASC,WAAW,QAAQ,2BAA2B;AACvD,SAASC,WAAW,QAAQ,2BAA2B;AACvD,SAASC,UAAU,QAAQ,0BAA0B;AACrD,SAASC,YAAY,QAAQ,4BAA4B;AACzD,SAASC,qBAAqB,QAAQ,qCAAqC;AAC3E,SAASC,OAAO,QAAQ,uBAAuB;AAC/C,SAASC,QAAQ,QAAQ,wBAAwB;AACjD,SAASC,OAAO,QAAQ,uBAAuB;AAC/C,SAASC,cAAc,QAAQ,8BAA8B;AAC7D,SAASC,SAAS,QAAQ,yBAAyB;AACnD,SAASC,UAAU,QAAQ,0BAA0B;AACrD,SAASC,OAAO,QAAQ,wBAAwB;AAChD,SAASC,MAAM,QAAQ,uBAAuB;AAC9C,SAASC,OAAO,QAAQ,wBAAwB;AAChD,SAASC,OAAO,QAAQ,wBAAwB;AAChD,SAASC,aAAa,QAAQ,+BAA+B;AAC7D,SAASC,YAAY,QAAQ,8BAA8B;AAC3D,SAASC,QAAQ,QAAQ,4BAA4B;AACrD,SAASC,YAAY,QAAQ,gCAAgC;AAC7D,SAASC,MAAM,QAAQ,uBAAuB;AAC9C,SAASC,MAAM,QAAQ,uBAAuB;AAC9C,SAASC,QAAQ,QAAQ,yBAAyB;AAClD,SAASC,OAAO,QAAQ,wBAAwB;AAChD,SAASC,SAAS,QAAQ,cAAc;AACxC,SAASC,UAAU,QAAQ,eAAe;AAC1C,SAASC,UAAU,QAAQ,eAAe;AAC1C,SAASC,cAAc,QAAQ,qCAAqC;AACpE,SAASC,eAAe,QAAQ,sCAAsC;AACtE,SAASC,WAAW,QAAQ,kCAAkC;AAC9D,SAASC,eAAe,QAAQ,sCAAsC;AACtE,SAASC,iBAAiB,QAAQ,kCAAkC;AACpE,SAASC,mBAAmB,QAAQ,oCAAoC;AACxE,SAASC,aAAa,QAAQ,8BAA8B;AAC5D,SAASC,UAAU,QAAQ,2BAA2B;AACtD,SAASC,SAAS,QAAQ,0BAA0B;AACpD,SAASC,UAAU,QAAQ,2BAA2B;AACtD,SAASC,UAAU,QAAQ,2BAA2B;AACtD,SAASC,QAAQ,QAAQ,4BAA4B;AACrD,SAASC,aAAa,QAAQ,iCAAiC;AAC/D,SAASC,cAAc,QAAQ,kCAAkC;AACjE,SAASC,UAAU,QAAQ,8BAA8B;AACzD,SAASC,SAAS,QAAQ,6BAA6B;AACvD,SAASC,QAAQ,QAAQ,4BAA4B;AACrD,SAASC,QAAQ,QAAQ,4BAA4B;AACrD,SAASC,SAAS,QAAQ,6BAA6B;AACvD,SAASC,OAAO,QAAQ,2BAA2B;AACnD,SAASC,YAAY,QAAQ,gCAAgC;AAC7D,SAASC,WAAW,QAAQ,+BAA+B;AAC3D,SAASC,QAAQ,QAAQ,4BAA4B;AACrD,SAASC,YAAY,QAAQ,gCAAgC;AAC7D,SAASC,OAAO,QAAQ,2BAA2B;AACnD,SAASC,SAAS,QAAQ,6BAA6B;AACvD,SAASC,SAAS,QAAQ,6BAA6B;AACvD,SAASC,QAAQ,QAAQ,4BAA4B;AACrD,SAASC,OAAO,QAAQ,2BAA2B;AACnD,SAASC,OAAO,QAAQ,2BAA2B;AACnD,SAASC,SAAS,QAAQ,6BAA6B;AACvD,SAASC,OAAO,QAAQ,2BAA2B;AACnD,SAASC,SAAS,QAAQ,6BAA6B;AACvD,SAASC,OAAO,QAAQ,2BAA2B;AACnD,SAASC,SAAS,QAAQ,6BAA6B;AACvD,SAASC,QAAQ,QAAQ,4BAA4B;AACrD,SAASC,QAAQ,QAAQ,wBAAwB;AACjD,SAASC,OAAO,QAAQ,2BAA2B;AACnD,SAASC,eAAe,QAAQ,mCAAmC;AACnE,SAASC,aAAa,QAAQ,iCAAiC;AAC/D,SAASC,UAAU,QAAQ,8BAA8B;AACzD,SAASC,QAAQ,QAAQ,4BAA4B;AACrD,SAASC,QAAQ,QAAQ,4BAA4B;AACrD,SAASC,QAAQ,QAAQ,4BAA4B;AACrD,SAASC,OAAO,QAAQ,2BAA2B;AACnD,SAASC,OAAO,QAAQ,2BAA2B;AACnD,SAASC,MAAM,QAAQ,uBAAuB;AAC9C,SAASC,UAAU,QAAQ,2BAA2B;AACtD,SAASC,aAAa,QAAQ,8BAA8B;AAC5D,SAASC,OAAO,QAAQ,wBAAwB;AAChD,SAASC,eAAe,QAAQ,gCAAgC;AAChE,SAASC,YAAY,QAAQ,6BAA6B;AAC1D,SAASC,OAAO,QAAQ,wBAAwB;AAChD,SAASC,UAAU,QAAQ,2BAA2B;AACtD,SAASC,aAAa,QAAQ,8BAA8B;AAC5D,SAASC,cAAc,QAAQ,+BAA+B;AAC9D,SAASC,WAAW,QAAQ,qBAAqB;AACjD,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,OAAO,QAAQ,iBAAiB;AACzC,SAASC,SAAS,QAAQ,mBAAmB;AAC7C,SAASC,UAAU,QAAQ,qBAAqB;AAChD,SAASC,OAAO,QAAQ,iBAAiB;AACzC,SAASC,MAAM,QAAQ,gBAAgB;AACvC,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,OAAO,QAAQ,iBAAiB;AACzC,SAASC,UAAU,QAAQ,oBAAoB;AAC/C,SAASC,SAAS,QAAQ,mBAAmB;AAC7C,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,OAAO,QAAQ,iBAAiB;AACzC,SAASC,YAAY,QAAQ,sBAAsB;AACnD,SAASC,KAAK,QAAQ,eAAe;AACrC,SAASC,SAAS,QAAQ,mBAAmB;AAC7C,SAASC,KAAK,QAAQ,eAAe;AACrC,SAASC,QAAQ,QAAQ,qBAAqB;AAC9C,SAASC,UAAU,QAAQ,uBAAuB;AAClD,SAASC,aAAa,QAAQ,0BAA0B;AACxD,SAASC,UAAU,QAAQ,uBAAuB;AAClD,SAASC,UAAU,QAAQ,uBAAuB;AAClD,SAASC,UAAU,QAAQ,uBAAuB;AAClD,SAASC,SAAS,QAAQ,gBAAgB;AAC1C,SAASC,YAAY,QAAQ,yBAAyB;AACtD,SAASC,cAAc,QAAQ,2BAA2B;AAC1D,SAASC,WAAW,QAAQ,wBAAwB;AACpD,SAASC,WAAW,QAAQ,wBAAwB;AACpD,SAASC,UAAU,QAAQ,8BAA8B;AACzD,SAASC,WAAW,QAAQ,4BAA4B;AACxD,SAASC,YAAY,QAAQ,gCAAgC;AAC7D,SAASC,YAAY,QAAQ,gCAAgC;AAC7D,SAASC,OAAO,QAAQ,6BAA6B;AACrD,SAASC,WAAW,QAAQ,0BAA0B;AACtD,SAASC,UAAU,QAAQ,0BAA0B;AACrD,SAASC,OAAO,QAAQ,uBAAuB;AAC/C,SAASC,kBAAkB,QAAQ,kCAAkC;AACrE,SAASC,UAAU,QAAQ,0BAA0B;AACrD,OAAO,IAAIC,YAAY,GAAG;EACxB;EACAC,SAAS,EAAE3N,aAAa;EACxB,SAAS,EAAE+M,WAAW;EACtBa,OAAO,EAAEd,WAAW;EACpBe,UAAU,EAAEhB,cAAc;EAC1BiB,QAAQ,EAAElB,YAAY;EACtBmB,KAAK,EAAEpB,SAAS;EAChBqB,MAAM,EAAEtB,UAAU;EAClBuB,MAAM,EAAExB,UAAU;EAClByB,MAAM,EAAE1B,UAAU;EAClB2B,SAAS,EAAE5B,aAAa;EACxB6B,MAAM,EAAE9B,UAAU;EAClB+B,IAAI,EAAEhC,QAAQ;EACd;EACAiC,CAAC,EAAElC,KAAK;EACRmC,CAAC,EAAEnC,KAAK;EACR,OAAO,EAAED,SAAS;EAClBqC,CAAC,EAAEtC,KAAK;EACRuC,QAAQ,EAAExC,YAAY;EACtByC,GAAG,EAAE1C,OAAO;EACZ2C,IAAI,EAAE5C,QAAQ;EACd6C,KAAK,EAAE9C,SAAS;EAChB+C,MAAM,EAAEhD,UAAU;EAClBiD,GAAG,EAAElD,OAAO;EACZ,MAAM,EAAED,QAAQ;EAChBoD,EAAE,EAAErD,MAAM;EACVsD,EAAE,EAAEtD,MAAM;EACVuD,GAAG,EAAExD,OAAO;EACZyD,OAAO,EAAE1D,UAAU;EACnB2D,KAAK,EAAE5D,SAAS;EAChB6D,GAAG,EAAE9D,OAAO;EACZ,MAAM,EAAED,QAAQ;EAChBgE,OAAO,EAAEjE,WAAW;EACpB;EACA;EACAkE,YAAY,EAAE;IACZC,WAAW,EAAE,0BAA0B;IACvCC,QAAQ,EAAE,CAAC,cAAc;EAC3B,CAAC;EACDC,mBAAmB,EAAE;IACnBF,WAAW,EAAE,mCAAmC;IAChDC,QAAQ,EAAE,CAAC,qBAAqB;EAClC,CAAC;EACDE,cAAc,EAAE;IACdH,WAAW,EAAE,iBAAiB;IAC9BC,QAAQ,EAAE,CAAC,gBAAgB;EAC7B,CAAC;EACDG,qBAAqB,EAAE;IACrBJ,WAAW,EAAE,yBAAyB;IACtCC,QAAQ,EAAE,CAAC,uBAAuB;EACpC,CAAC;EACDI,gBAAgB,EAAE;IAChBL,WAAW,EAAE,yCAAyC;IACtDC,QAAQ,EAAE,CAAC,kBAAkB;EAC/B,CAAC;EACDK,gBAAgB,EAAE;IAChBN,WAAW,EAAE,yCAAyC;IACtDC,QAAQ,EAAE,CAAC,kBAAkB;EAC/B,CAAC;EACDM,eAAe,EAAE;IACfP,WAAW,EAAE,oCAAoC;IACjDC,QAAQ,EAAE,CAAC,iBAAiB;EAC9B,CAAC;EACDO,OAAO,EAAE;IACPR,WAAW,EAAE,qBAAqB;IAClCC,QAAQ,EAAE,CAAC,SAAS;EACtB,CAAC;EACDQ,gBAAgB,EAAE;IAChBT,WAAW,EAAE,mBAAmB;IAChCC,QAAQ,EAAE,CAAC,kBAAkB;EAC/B,CAAC;EACDS,YAAY,EAAE;IACZV,WAAW,EAAE,eAAe;IAC5BC,QAAQ,EAAE,CAAC,cAAc;EAC3B,CAAC;EACDU,kBAAkB,EAAE;IAClBX,WAAW,EAAE,qBAAqB;IAClCC,QAAQ,EAAE,CAAC,oBAAoB;EACjC,CAAC;EACDW,yBAAyB,EAAE;IACzBZ,WAAW,EAAE,6BAA6B;IAC1CC,QAAQ,EAAE,CAAC,2BAA2B;EACxC,CAAC;EACD;EACAY,mBAAmB,EAAE;IACnBb,WAAW,EAAE,uBAAuB;IACpCC,QAAQ,EAAE,CAAC,qBAAqB;EAClC,CAAC;EACDa,eAAe,EAAE;IACfd,WAAW,EAAE,kBAAkB;IAC/BC,QAAQ,EAAE,CAAC,iBAAiB;EAC9B,CAAC;EACDc,QAAQ,EAAE;IACRf,WAAW,EAAE,uBAAuB;IACpCC,QAAQ,EAAE,CAAC,UAAU;EACvB,CAAC;EACDe,UAAU,EAAE;IACVhB,WAAW,EAAE,aAAa;IAC1BC,QAAQ,EAAE,CAAC,YAAY;EACzB,CAAC;EACDgB,uBAAuB,EAAE;IACvBjB,WAAW,EAAE,2BAA2B;IACxCC,QAAQ,EAAE,CAAC,yBAAyB;EACtC,CAAC;EACDiB,YAAY,EAAE;IACZlB,WAAW,EAAE,eAAe;IAC5BC,QAAQ,EAAE,CAAC,cAAc;EAC3B,CAAC;EACDkB,aAAa,EAAE;IACbnB,WAAW,EAAE,yBAAyB;IACtCC,QAAQ,EAAE,CAAC,eAAe;EAC5B,CAAC;EACDmB,aAAa,EAAE;IACbpB,WAAW,EAAE,yBAAyB;IACtCC,QAAQ,EAAE,CAAC,eAAe;EAC5B,CAAC;EACDoB,aAAa,EAAE;IACbrB,WAAW,EAAE,gBAAgB;IAC7BC,QAAQ,EAAE,CAAC,eAAe;EAC5B,CAAC;EACDqB,UAAU,EAAE;IACVtB,WAAW,EAAE,aAAa;IAC1BC,QAAQ,EAAE,CAAC,YAAY;EACzB,CAAC;EACDsB,YAAY,EAAE;IACZvB,WAAW,EAAE,eAAe;IAC5BC,QAAQ,EAAE,CAAC,cAAc;EAC3B,CAAC;EACDuB,WAAW,EAAE;IACXxB,WAAW,EAAE,cAAc;IAC3BC,QAAQ,EAAE,CAAC,aAAa;EAC1B,CAAC;EACDwB,oBAAoB,EAAE;IACpBzB,WAAW,EAAE,wBAAwB;IACrCC,QAAQ,EAAE,CAAC,sBAAsB;EACnC,CAAC;EACDyB,OAAO,EAAE;IACP1B,WAAW,EAAE,kBAAkB;IAC/BC,QAAQ,EAAE,CAAC,SAAS;EACtB,CAAC;EACD0B,mBAAmB,EAAE;IACnB3B,WAAW,EAAE,uBAAuB;IACpCC,QAAQ,EAAE,CAAC,qBAAqB;EAClC,CAAC;EACD2B,eAAe,EAAE;IACf5B,WAAW,EAAE,mBAAmB;IAChCC,QAAQ,EAAE,CAAC,iBAAiB;EAC9B,CAAC;EACD4B,YAAY,EAAE;IACZ7B,WAAW,EAAE,eAAe;IAC5BC,QAAQ,EAAE,CAAC,cAAc;EAC3B,CAAC;EACD6B,UAAU,EAAE;IACV9B,WAAW,EAAE,sBAAsB;IACnCC,QAAQ,EAAE,CAAC,YAAY;EACzB,CAAC;EACD8B,QAAQ,EAAE;IACR/B,WAAW,EAAE,oBAAoB;IACjCC,QAAQ,EAAE,CAAC,UAAU;EACvB,CAAC;EACD+B,SAAS,EAAE;IACThC,WAAW,EAAE,oBAAoB;IACjCC,QAAQ,EAAE,CAAC,WAAW;EACxB,CAAC;EACDgC,OAAO,EAAE;IACPjC,WAAW,EAAE,kBAAkB;IAC/BC,QAAQ,EAAE,CAAC,SAAS;EACtB,CAAC;EACDiC,cAAc,EAAE;IACdlC,WAAW,EAAE,0BAA0B;IACvCC,QAAQ,EAAE,CAAC,gBAAgB;EAC7B,CAAC;EACDkC,SAAS,EAAE;IACTnC,WAAW,EAAE,oDAAoD;IACjEC,QAAQ,EAAE,CAAC,WAAW;EACxB,CAAC;EACDmC,WAAW,EAAE;IACXpC,WAAW,EAAE,cAAc;IAC3BC,QAAQ,EAAE,CAAC,aAAa;EAC1B,CAAC;EACDoC,mBAAmB,EAAE;IACnBrC,WAAW,EAAE,uBAAuB;IACpCC,QAAQ,EAAE,CAAC,qBAAqB;EAClC,CAAC;EACDqC,WAAW,EAAE;IACXtC,WAAW,EAAE,8DAA8D;IAC3EC,QAAQ,EAAE,CAAC,aAAa;EAC1B,CAAC;EACDsC,aAAa,EAAE;IACbvC,WAAW,EAAE,oDAAoD;IACjEC,QAAQ,EAAE,CAAC,eAAe;EAC5B,CAAC;EACDuC,eAAe,EAAE;IACfxC,WAAW,EAAE,2BAA2B;IACxCC,QAAQ,EAAE,CAAC,iBAAiB;EAC9B,CAAC;EACDwC,eAAe,EAAE;IACfzC,WAAW,EAAE,2BAA2B;IACxCC,QAAQ,EAAE,CAAC,iBAAiB;EAC9B,CAAC;EACDyC,gBAAgB,EAAE;IAChB1C,WAAW,EAAE,gCAAgC;IAC7CC,QAAQ,EAAE,CAAC,kBAAkB;EAC/B,CAAC;EACD;EACA0C,SAAS,EAAE;IACT3C,WAAW,EAAE,qBAAqB;IAClCC,QAAQ,EAAE,CAAC,WAAW;EACxB,CAAC;EACD2C,YAAY,EAAE;IACZ5C,WAAW,EAAE,kCAAkC;IAC/CC,QAAQ,EAAE,CAAC,cAAc;EAC3B,CAAC;EACD4C,OAAO,EAAE;IACP7C,WAAW,EAAE,gFAAgF;IAC7FC,QAAQ,EAAE,CAAC,SAAS;EACtB,CAAC;EACD6C,YAAY,EAAE;IACZ9C,WAAW,EAAE,eAAe;IAC5BC,QAAQ,EAAE,CAAC,cAAc;EAC3B,CAAC;EACD8C,UAAU,EAAE;IACV/C,WAAW,EAAE,aAAa;IAC1BC,QAAQ,EAAE,CAAC,YAAY;EACzB,CAAC;EACD+C,UAAU,EAAE;IACVhD,WAAW,EAAE,aAAa;IAC1BC,QAAQ,EAAE,CAAC,YAAY;EACzB,CAAC;EACDgD,YAAY,EAAE;IACZjD,WAAW,EAAE,eAAe;IAC5BC,QAAQ,EAAE,CAAC,cAAc;EAC3B,CAAC;EACDiD,iBAAiB,EAAE;IACjBlD,WAAW,EAAE,oBAAoB;IACjCC,QAAQ,EAAE,CAAC,mBAAmB;EAChC,CAAC;EACD;EACAkD,UAAU,EAAEvH,cAAc;EAC1BwH,MAAM,EAAE1H,UAAU;EAClB2H,SAAS,EAAE1H,aAAa;EACxB2H,GAAG,EAAE7H,OAAO;EACZ8H,OAAO,EAAE7F,WAAW;EACpB8F,QAAQ,EAAEhI,YAAY;EACtBiI,WAAW,EAAElI,eAAe;EAC5BmI,GAAG,EAAEpI,OAAO;EACZqI,MAAM,EAAEvI,UAAU;EAClBwI,SAAS,EAAEvI,aAAa;EACxBwI,EAAE,EAAE1I,MAAM;EACV;EACA2I,GAAG,EAAE5I,OAAO;EACZ6I,GAAG,EAAE9I,OAAO;EACZ+I,IAAI,EAAEhJ,QAAQ;EACdiJ,IAAI,EAAElJ,QAAQ;EACdmJ,IAAI,EAAEpJ,QAAQ;EACdqJ,MAAM,EAAEtJ,UAAU;EAClBuJ,SAAS,EAAExJ,aAAa;EACxByJ,WAAW,EAAE1J,eAAe;EAC5B2J,MAAM,EAAE7G,UAAU;EAClB8G,GAAG,EAAE7J,OAAO;EACZ8J,IAAI,EAAEhK,QAAQ;EACdiK,KAAK,EAAElK,SAAS;EAChBmK,GAAG,EAAEpK,OAAO;EACZqK,KAAK,EAAEtK,SAAS;EAChBuK,GAAG,EAAExK,OAAO;EACZyK,KAAK,EAAE1K,SAAS;EAChB2K,GAAG,EAAE5K,OAAO;EACZ6K,GAAG,EAAE9K,OAAO;EACZ+K,IAAI,EAAEhL,QAAQ;EACdiL,KAAK,EAAElL,SAAS;EAChBmL,KAAK,EAAEpL,SAAS;EAChBqL,GAAG,EAAEtL,OAAO;EACZuL,QAAQ,EAAExL,YAAY;EACtByL,IAAI,EAAE1L,QAAQ;EACd2L,OAAO,EAAE5L,WAAW;EACpB6L,QAAQ,EAAE9L,YAAY;EACtB+L,GAAG,EAAEhM,OAAO;EACZiM,KAAK,EAAElM,SAAS;EAChBmM,IAAI,EAAEpM,QAAQ;EACdqM,IAAI,EAAEtM,QAAQ;EACduM,KAAK,EAAExM,SAAS;EAChByM,MAAM,EAAE1M,UAAU;EAClB2M,QAAQ,EAAEnI,YAAY;EACtBoI,UAAU,EAAE7M,cAAc;EAC1B8M,SAAS,EAAE/M,aAAa;EACxBgN,IAAI,EAAEjN,QAAQ;EACd;EACAkN,MAAM,EAAEnN,UAAU;EAClBoN,MAAM,EAAErN,UAAU;EAClBsN,KAAK,EAAEvN,SAAS;EAChBwN,MAAM,EAAEzN,UAAU;EAClB0N,SAAS,EAAE3N,aAAa;EACxB4N,eAAe,EAAE7N,mBAAmB;EACpC8N,aAAa,EAAE/N,iBAAiB;EAChC;EACAgO,WAAW,EAAEjO,eAAe;EAC5BkO,OAAO,EAAEnO,WAAW;EACpBoO,WAAW,EAAErO,eAAe;EAC5BsO,UAAU,EAAEvO,cAAc;EAC1B;EACAwO,MAAM,EAAEzO,UAAU;EAClB,QAAQ,EAAED,UAAU;EACpB2O,KAAK,EAAE5O,SAAS;EAChB;EACA6O,GAAG,EAAE9O,OAAO;EACZ+O,IAAI,EAAEhP,QAAQ;EACdiP,EAAE,EAAElP,MAAM;EACVmP,EAAE,EAAEpP,MAAM;EACV;EACAqP,QAAQ,EAAEtP,YAAY;EACtBuP,IAAI,EAAExP,QAAQ;EACd;EACAyP,QAAQ,EAAE1P,YAAY;EACtB2P,SAAS,EAAE5P,aAAa;EACxB;EACA6P,GAAG,EAAE9P,OAAO;EACZ+P,GAAG,EAAEhQ,OAAO;EACZiQ,EAAE,EAAElQ,MAAM;EACVmQ,GAAG,EAAEpQ,OAAO;EACZ;EACAqQ,MAAM,EAAEtQ,UAAU;EAClBuQ,KAAK,EAAExQ,SAAS;EAChByQ,MAAM,EAAE9J,UAAU;EAClB+J,UAAU,EAAE3Q,cAAc;EAC1B4Q,GAAG,EAAE7Q,OAAO;EACZ8Q,IAAI,EAAE/Q,QAAQ;EACdgR,IAAI,EAAE/R,QAAQ;EACdgS,GAAG,EAAElR,OAAO;EACZmR,iBAAiB,EAAEpR,qBAAqB;EACxCqR,QAAQ,EAAEtR,YAAY;EACtBuR,MAAM,EAAExR,UAAU;EAClByR,OAAO,EAAE1R,WAAW;EACpB2R,OAAO,EAAE5R,WAAW;EACpB6R,GAAG,EAAE9R,OAAO;EACZ+R,IAAI,EAAEhO,QAAQ;EACdiO,IAAI,EAAEjS,QAAQ;EACdkS,GAAG,EAAEnS,OAAO;EACZoS,IAAI,EAAErS,QAAQ;EACdsS,eAAe,EAAEvS,mBAAmB;EACpCwS,KAAK,EAAEzS,SAAS;EAChB0S,MAAM,EAAE3S,UAAU;EAClB4S,OAAO,EAAE7S,WAAW;EACpB8S,MAAM,EAAE/K,UAAU;EAClBgL,cAAc,EAAEjL,kBAAkB;EAClCkL,GAAG,EAAEnL,OAAO;EACZoL,IAAI,EAAEnT,QAAQ;EACdoT,IAAI,EAAErT,QAAQ;EACdsT,OAAO,EAAEvT,WAAW;EACpBwT,MAAM,EAAEzT,UAAU;EAClB0T,KAAK,EAAE3T,SAAS;EAChB4T,SAAS,EAAE7T,aAAa;EACxB8T,KAAK,EAAE/T,SAAS;EAChB;EACAgU,YAAY,EAAElU,gBAAgB;EAC9BmU,mBAAmB,EAAElU,uBAAuB;EAC5C;EACAmU,SAAS,EAAErU,aAAa;EACxBsU,KAAK,EAAEvU,SAAS;EAChBwU,YAAY,EAAEzU,gBAAgB;EAC9B0U,WAAW,EAAE3U,eAAe;EAC5B4U,YAAY,EAAE7U,gBAAgB;EAC9B8U,UAAU,EAAE/U,cAAc;EAC1BgV,MAAM,EAAEjV,UAAU;EAClBkV,SAAS,EAAEnV,aAAa;EACxB;EACAoV,OAAO,EAAErV,WAAW;EACpBsV,cAAc,EAAEvV,kBAAkB;EAClCwV,WAAW,EAAEzV,eAAe;EAC5B0V,SAAS,EAAE3V,aAAa;EACxB4V,KAAK,EAAE7V,SAAS;EAChB8V,SAAS,EAAE/V,aAAa;EACxBgW,MAAM,EAAEjW,UAAU;EAClBkW,QAAQ,EAAEnW,YAAY;EACtBoW,OAAO,EAAErW,WAAW;EACpBsW,SAAS,EAAEvW,aAAa;EACxBwW,OAAO,EAAEzW,WAAW;EACpB;EACA0W,YAAY,EAAE3W,gBAAgB;EAC9B4W,aAAa,EAAE7W,iBAAiB;EAChC8W,WAAW,EAAE/W,eAAe;EAC5BgX,YAAY,EAAEjX,gBAAgB;EAC9BkX,WAAW,EAAEnX,eAAe;EAC5BoX,eAAe,EAAErX,mBAAmB;EACpCsX,WAAW,EAAEvX,eAAe;EAC5BwX,OAAO,EAAEzX,WAAW;EACpB0X,gBAAgB,EAAE3X,oBAAoB;EACtC4X,QAAQ,EAAE7X,YAAY;EACtB;EACA8X,GAAG,EAAE/X,OAAO;EACZ;EACAgY,GAAG,EAAEjY,OAAO;EACZkY,GAAG,EAAEnY,OAAO;EACZoY,IAAI,EAAErY,QAAQ;EACdsY,MAAM,EAAEvY,UAAU;EAClBwY,GAAG,EAAEzY,OAAO;EACZ0Y,IAAI,EAAE3Y,QAAQ;EACd4Y,IAAI,EAAE7Y,QAAQ;EACd8Y,WAAW,EAAE/Y,eAAe;EAC5BgZ,GAAG,EAAEjZ,OAAO;EACZkZ,GAAG,EAAEnZ,OAAO;EACZoZ,QAAQ,EAAEzO,YAAY;EACtB;EACA0O,IAAI,EAAEtZ,QAAQ;EACduZ,KAAK,EAAExZ,SAAS;EAChByZ,IAAI,EAAE1Z,QAAQ;EACd2Z,KAAK,EAAE5Z,SAAS;EAChB6Z,IAAI,EAAE9Z,QAAQ;EACd+Z,KAAK,EAAEha,SAAS;EAChBia,IAAI,EAAEla,QAAQ;EACdma,KAAK,EAAEpa,SAAS;EAChBqa,IAAI,EAAEta,QAAQ;EACdua,KAAK,EAAExa,SAAS;EAChBya,IAAI,EAAE1a,QAAQ;EACd2a,KAAK,EAAE5a,SAAS;EAChB6a,KAAK,EAAE9a,SAAS;EAChB+a,GAAG,EAAEhb,OAAO;EACZib,IAAI,EAAElb,QAAQ;EACdmb,GAAG,EAAEpb,OAAO;EACZqb,IAAI,EAAEtb,QAAQ;EACdub,GAAG,EAAExb,OAAO;EACZyb,IAAI,EAAE1b,QAAQ;EACd2b,GAAG,EAAE5b,OAAO;EACZ6b,IAAI,EAAE9b,QAAQ;EACd+b,GAAG,EAAE9P,OAAO;EACZ+P,IAAI,EAAEjc,QAAQ;EACdkc,GAAG,EAAEnc,OAAO;EACZoc,IAAI,EAAErc,QAAQ;EACd;EACAsc,EAAE,EAAEvc,MAAM;EACV;EACAwc,KAAK,EAAEzc,SAAS;EAChB0c,MAAM,EAAE9c,UAAU;EAClB+c,GAAG,EAAE9c,OAAO;EACZ+c,GAAG,EAAE9c,OAAO;EACZ+c,GAAG,EAAE9c,OAAO;EACZ+c,KAAK,EAAEnd,SAAS;EAChBod,SAAS,EAAErd,aAAa;EACxBsd,UAAU,EAAEvd,cAAc;EAC1Bwd,SAAS,EAAE1d,aAAa;EACxB2d,eAAe,EAAE1d,mBAAmB;EACpC2d,UAAU,EAAE7d,cAAc;EAC1B8d,OAAO,EAAE/d,WAAW;EACpBge,MAAM,EAAEje,UAAU;EAClB;EACAke,MAAM,EAAEne,UAAU;EAClBoe,OAAO,EAAEhR;AACX,CAAC"},"metadata":{},"sourceType":"module"}