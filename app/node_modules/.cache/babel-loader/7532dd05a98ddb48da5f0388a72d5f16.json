{"ast":null,"code":"import { factory } from '../../utils/factory';\nimport { isInteger } from '../../utils/number';\nfunction baseFormatter(base) {\n  var prefixes = {\n    2: '0b',\n    8: '0o',\n    16: '0x'\n  };\n  var prefix = prefixes[base];\n  return function (n) {\n    if (n > Math.pow(2, 31) - 1 || n < -Math.pow(2, 31)) {\n      throw new Error('Value must be in range [-2^31, 2^31-1]');\n    }\n    if (!isInteger(n)) {\n      throw new Error('Value must be an integer');\n    }\n    if (n < 0) {\n      n = n + Math.pow(2, 32);\n    }\n    return \"\".concat(prefix).concat(n.toString(base));\n  };\n}\nvar dependencies = ['typed'];\nexport function createBaseFormatterFactory(name, base) {\n  return factory(name, dependencies, function (_ref) {\n    var typed = _ref.typed;\n    return typed(name, {\n      number: baseFormatter(base)\n    });\n  });\n}","map":{"version":3,"names":["factory","isInteger","baseFormatter","base","prefixes","prefix","n","Math","pow","Error","concat","toString","dependencies","createBaseFormatterFactory","name","_ref","typed","number"],"sources":["F:/extension/SEM 7/NN/Lab/my lab/P/temp/app/node_modules/mathjs/es/function/string/baseUtils.js"],"sourcesContent":["import { factory } from '../../utils/factory';\nimport { isInteger } from '../../utils/number';\n\nfunction baseFormatter(base) {\n  var prefixes = {\n    2: '0b',\n    8: '0o',\n    16: '0x'\n  };\n  var prefix = prefixes[base];\n  return function (n) {\n    if (n > Math.pow(2, 31) - 1 || n < -Math.pow(2, 31)) {\n      throw new Error('Value must be in range [-2^31, 2^31-1]');\n    }\n\n    if (!isInteger(n)) {\n      throw new Error('Value must be an integer');\n    }\n\n    if (n < 0) {\n      n = n + Math.pow(2, 32);\n    }\n\n    return \"\".concat(prefix).concat(n.toString(base));\n  };\n}\n\nvar dependencies = ['typed'];\nexport function createBaseFormatterFactory(name, base) {\n  return factory(name, dependencies, function (_ref) {\n    var typed = _ref.typed;\n    return typed(name, {\n      number: baseFormatter(base)\n    });\n  });\n}"],"mappings":"AAAA,SAASA,OAAO,QAAQ,qBAAqB;AAC7C,SAASC,SAAS,QAAQ,oBAAoB;AAE9C,SAASC,aAAa,CAACC,IAAI,EAAE;EAC3B,IAAIC,QAAQ,GAAG;IACb,CAAC,EAAE,IAAI;IACP,CAAC,EAAE,IAAI;IACP,EAAE,EAAE;EACN,CAAC;EACD,IAAIC,MAAM,GAAGD,QAAQ,CAACD,IAAI,CAAC;EAC3B,OAAO,UAAUG,CAAC,EAAE;IAClB,IAAIA,CAAC,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,IAAIF,CAAC,GAAG,CAACC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE;MACnD,MAAM,IAAIC,KAAK,CAAC,wCAAwC,CAAC;IAC3D;IAEA,IAAI,CAACR,SAAS,CAACK,CAAC,CAAC,EAAE;MACjB,MAAM,IAAIG,KAAK,CAAC,0BAA0B,CAAC;IAC7C;IAEA,IAAIH,CAAC,GAAG,CAAC,EAAE;MACTA,CAAC,GAAGA,CAAC,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC;IACzB;IAEA,OAAO,EAAE,CAACE,MAAM,CAACL,MAAM,CAAC,CAACK,MAAM,CAACJ,CAAC,CAACK,QAAQ,CAACR,IAAI,CAAC,CAAC;EACnD,CAAC;AACH;AAEA,IAAIS,YAAY,GAAG,CAAC,OAAO,CAAC;AAC5B,OAAO,SAASC,0BAA0B,CAACC,IAAI,EAAEX,IAAI,EAAE;EACrD,OAAOH,OAAO,CAACc,IAAI,EAAEF,YAAY,EAAE,UAAUG,IAAI,EAAE;IACjD,IAAIC,KAAK,GAAGD,IAAI,CAACC,KAAK;IACtB,OAAOA,KAAK,CAACF,IAAI,EAAE;MACjBG,MAAM,EAAEf,aAAa,CAACC,IAAI;IAC5B,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ"},"metadata":{},"sourceType":"module"}