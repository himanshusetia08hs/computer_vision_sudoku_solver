{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { unsortedSegmentSum } from '../../ops/unsorted_segment_sum';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.unsortedSegmentSum = function (segmentIds, numSegments) {\n  this.throwIfDisposed();\n  return unsortedSegmentSum(this, segmentIds, numSegments);\n};","map":{"version":3,"sources":["../../../../../../../tfjs-core/src/public/chained_ops/unsorted_segment_sum.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;AAeG;AAEH,SAAQ,kBAAkB,QAAO,gCAAgC;AACjE,SAAQ,oBAAoB,QAAyB,cAAc;AAUnE,oBAAoB,EAAE,CAAC,SAAS,CAAC,kBAAkB,GAC/C,UACa,UAAiC,EAAE,WAAmB,EAAA;EACrE,IAAI,CAAC,eAAe,EAAE;EACtB,OAAO,kBAAkB,CAAC,IAAI,EAAE,UAAU,EAAE,WAAW,CAAC;AAC1D,CAAC","sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {unsortedSegmentSum} from '../../ops/unsorted_segment_sum';\nimport {getGlobalTensorClass, Tensor, Tensor1D} from '../../tensor';\nimport {Rank, TensorLike1D} from '../../types';\n\ndeclare module '../../tensor' {\n  interface Tensor<R extends Rank = Rank> {\n    unsortedSegmentSum<T extends Tensor>(\n        this: T, segmentIds: Tensor1D|TensorLike1D, numSegments: number): T;\n  }\n}\n\ngetGlobalTensorClass().prototype.unsortedSegmentSum =\n    function<T extends Tensor>(\n        this: T, segmentIds: Tensor1D|TensorLike1D, numSegments: number): T {\n  this.throwIfDisposed();\n  return unsortedSegmentSum(this, segmentIds, numSegments);\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}