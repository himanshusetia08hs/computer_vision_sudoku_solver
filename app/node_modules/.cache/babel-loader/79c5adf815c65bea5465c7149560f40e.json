{"ast":null,"code":"import Decimal from 'decimal.js';\nimport { factory } from '../../utils/factory';\nvar name = 'BigNumber';\nvar dependencies = ['?on', 'config'];\nexport var createBigNumberClass = /* #__PURE__ */factory(name, dependencies, function (_ref) {\n  var on = _ref.on,\n    config = _ref.config;\n  var EUCLID = 9; // Use euclidian division for mod calculation\n\n  var BigNumber = Decimal.clone({\n    precision: config.precision,\n    modulo: EUCLID\n  });\n  /**\n   * Attach type information\n   */\n\n  BigNumber.prototype.type = 'BigNumber';\n  BigNumber.prototype.isBigNumber = true;\n  /**\n   * Get a JSON representation of a BigNumber containing\n   * type information\n   * @returns {Object} Returns a JSON object structured as:\n   *                   `{\"mathjs\": \"BigNumber\", \"value\": \"0.2\"}`\n   */\n\n  BigNumber.prototype.toJSON = function () {\n    return {\n      mathjs: 'BigNumber',\n      value: this.toString()\n    };\n  };\n  /**\n   * Instantiate a BigNumber from a JSON object\n   * @param {Object} json  a JSON object structured as:\n   *                       `{\"mathjs\": \"BigNumber\", \"value\": \"0.2\"}`\n   * @return {BigNumber}\n   */\n\n  BigNumber.fromJSON = function (json) {\n    return new BigNumber(json.value);\n  };\n  if (on) {\n    // listen for changed in the configuration, automatically apply changed precision\n    on('config', function (curr, prev) {\n      if (curr.precision !== prev.precision) {\n        BigNumber.config({\n          precision: curr.precision\n        });\n      }\n    });\n  }\n  return BigNumber;\n}, {\n  isClass: true\n});","map":{"version":3,"names":["Decimal","factory","name","dependencies","createBigNumberClass","_ref","on","config","EUCLID","BigNumber","clone","precision","modulo","prototype","type","isBigNumber","toJSON","mathjs","value","toString","fromJSON","json","curr","prev","isClass"],"sources":["F:/extension/SEM 7/NN/Lab/my lab/P/temp/app/node_modules/mathjs/es/type/bignumber/BigNumber.js"],"sourcesContent":["import Decimal from 'decimal.js';\nimport { factory } from '../../utils/factory';\nvar name = 'BigNumber';\nvar dependencies = ['?on', 'config'];\nexport var createBigNumberClass = /* #__PURE__ */factory(name, dependencies, function (_ref) {\n  var on = _ref.on,\n      config = _ref.config;\n  var EUCLID = 9; // Use euclidian division for mod calculation\n\n  var BigNumber = Decimal.clone({\n    precision: config.precision,\n    modulo: EUCLID\n  });\n  /**\n   * Attach type information\n   */\n\n  BigNumber.prototype.type = 'BigNumber';\n  BigNumber.prototype.isBigNumber = true;\n  /**\n   * Get a JSON representation of a BigNumber containing\n   * type information\n   * @returns {Object} Returns a JSON object structured as:\n   *                   `{\"mathjs\": \"BigNumber\", \"value\": \"0.2\"}`\n   */\n\n  BigNumber.prototype.toJSON = function () {\n    return {\n      mathjs: 'BigNumber',\n      value: this.toString()\n    };\n  };\n  /**\n   * Instantiate a BigNumber from a JSON object\n   * @param {Object} json  a JSON object structured as:\n   *                       `{\"mathjs\": \"BigNumber\", \"value\": \"0.2\"}`\n   * @return {BigNumber}\n   */\n\n\n  BigNumber.fromJSON = function (json) {\n    return new BigNumber(json.value);\n  };\n\n  if (on) {\n    // listen for changed in the configuration, automatically apply changed precision\n    on('config', function (curr, prev) {\n      if (curr.precision !== prev.precision) {\n        BigNumber.config({\n          precision: curr.precision\n        });\n      }\n    });\n  }\n\n  return BigNumber;\n}, {\n  isClass: true\n});"],"mappings":"AAAA,OAAOA,OAAO,MAAM,YAAY;AAChC,SAASC,OAAO,QAAQ,qBAAqB;AAC7C,IAAIC,IAAI,GAAG,WAAW;AACtB,IAAIC,YAAY,GAAG,CAAC,KAAK,EAAE,QAAQ,CAAC;AACpC,OAAO,IAAIC,oBAAoB,GAAG,eAAeH,OAAO,CAACC,IAAI,EAAEC,YAAY,EAAE,UAAUE,IAAI,EAAE;EAC3F,IAAIC,EAAE,GAAGD,IAAI,CAACC,EAAE;IACZC,MAAM,GAAGF,IAAI,CAACE,MAAM;EACxB,IAAIC,MAAM,GAAG,CAAC,CAAC,CAAC;;EAEhB,IAAIC,SAAS,GAAGT,OAAO,CAACU,KAAK,CAAC;IAC5BC,SAAS,EAAEJ,MAAM,CAACI,SAAS;IAC3BC,MAAM,EAAEJ;EACV,CAAC,CAAC;EACF;AACF;AACA;;EAEEC,SAAS,CAACI,SAAS,CAACC,IAAI,GAAG,WAAW;EACtCL,SAAS,CAACI,SAAS,CAACE,WAAW,GAAG,IAAI;EACtC;AACF;AACA;AACA;AACA;AACA;;EAEEN,SAAS,CAACI,SAAS,CAACG,MAAM,GAAG,YAAY;IACvC,OAAO;MACLC,MAAM,EAAE,WAAW;MACnBC,KAAK,EAAE,IAAI,CAACC,QAAQ;IACtB,CAAC;EACH,CAAC;EACD;AACF;AACA;AACA;AACA;AACA;;EAGEV,SAAS,CAACW,QAAQ,GAAG,UAAUC,IAAI,EAAE;IACnC,OAAO,IAAIZ,SAAS,CAACY,IAAI,CAACH,KAAK,CAAC;EAClC,CAAC;EAED,IAAIZ,EAAE,EAAE;IACN;IACAA,EAAE,CAAC,QAAQ,EAAE,UAAUgB,IAAI,EAAEC,IAAI,EAAE;MACjC,IAAID,IAAI,CAACX,SAAS,KAAKY,IAAI,CAACZ,SAAS,EAAE;QACrCF,SAAS,CAACF,MAAM,CAAC;UACfI,SAAS,EAAEW,IAAI,CAACX;QAClB,CAAC,CAAC;MACJ;IACF,CAAC,CAAC;EACJ;EAEA,OAAOF,SAAS;AAClB,CAAC,EAAE;EACDe,OAAO,EAAE;AACX,CAAC,CAAC"},"metadata":{},"sourceType":"module"}