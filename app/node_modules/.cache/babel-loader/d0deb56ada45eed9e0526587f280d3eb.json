{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Identity, tensor } from '@tensorflow/tfjs-core';\nexport function identity(args) {\n  const {\n    inputs: {\n      x\n    },\n    backend\n  } = args;\n  if (x.dtype === 'string') {\n    return tensor(backend.readSync(x.dataId), x.shape, x.dtype);\n  }\n  const out = backend.makeOutput(x.shape, x.dtype);\n  const inVals = backend.typedArrayFromHeap(x);\n  const outVals = backend.typedArrayFromHeap(out);\n  outVals.set(inVals);\n  return out;\n}\nexport const identityConfig = {\n  kernelName: Identity,\n  backendName: 'wasm',\n  kernelFunc: identity\n};","map":{"version":3,"sources":["../../../../../../tfjs-backend-wasm/src/kernels/Identity.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;AAeG;AAEH,SAAQ,QAAQ,EAA4C,MAAM,QAAO,uBAAuB;AAKhG,OAAM,SAAU,QAAQ,CAAC,IAAoD,EAAA;EAE3E,MAAM;IAAC,MAAM,EAAE;MAAC;IAAC,CAAC;IAAE;EAAO,CAAC,GAAG,IAAI;EAEnC,IAAI,CAAC,CAAC,KAAK,KAAK,QAAQ,EAAE;IACxB,OAAO,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,KAAK,CAAC;EAC5D;EAED,MAAM,GAAG,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,KAAK,CAAC;EAChD,MAAM,MAAM,GAAG,OAAO,CAAC,kBAAkB,CAAC,CAAC,CAAC;EAC5C,MAAM,OAAO,GAAG,OAAO,CAAC,kBAAkB,CAAC,GAAG,CAAC;EAC/C,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC;EACnB,OAAO,GAAG;AACZ;AAEA,OAAO,MAAM,cAAc,GAAiB;EAC1C,UAAU,EAAE,QAAQ;EACpB,WAAW,EAAE,MAAM;EACnB,UAAU,EAAE;CACb","sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Identity, IdentityInputs, KernelConfig, KernelFunc, tensor} from '@tensorflow/tfjs-core';\nimport {TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nexport function identity(args: {inputs: IdentityInputs, backend: BackendWasm}):\n    TensorInfo {\n  const {inputs: {x}, backend} = args;\n\n  if (x.dtype === 'string') {\n    return tensor(backend.readSync(x.dataId), x.shape, x.dtype);\n  }\n\n  const out = backend.makeOutput(x.shape, x.dtype);\n  const inVals = backend.typedArrayFromHeap(x);\n  const outVals = backend.typedArrayFromHeap(out);\n  outVals.set(inVals);\n  return out;\n}\n\nexport const identityConfig: KernelConfig = {\n  kernelName: Identity,\n  backendName: 'wasm',\n  kernelFunc: identity as {} as KernelFunc,\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}