{"ast":null,"code":"/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { FlipLeftRight } from '@tensorflow/tfjs-core';\nlet wasmFlipLeftRight;\nfunction setup(backend) {\n  wasmFlipLeftRight = backend.wasm.cwrap(FlipLeftRight, null /* void */, ['number', 'number', 'number', 'number', 'number', 'number']);\n}\nexport function flipLeftRight(args) {\n  const {\n    inputs,\n    backend\n  } = args;\n  const {\n    image\n  } = inputs;\n  const out = backend.makeOutput(image.shape, image.dtype);\n  const imageId = backend.dataIdMap.get(image.dataId).id;\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  const [batch, imageHeight, imageWidth, numChannels] = image.shape;\n  wasmFlipLeftRight(imageId, batch, imageHeight, imageWidth, numChannels, outId);\n  return out;\n}\nexport const flipLeftRightConfig = {\n  kernelName: FlipLeftRight,\n  backendName: 'wasm',\n  kernelFunc: flipLeftRight,\n  setupFunc: setup\n};","map":{"version":3,"sources":["../../src/kernels/FlipLeftRight.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;AAeG;AAEH,SAAQ,aAAa,QAAkE,uBAAuB;AAI9G,IAAI,iBAE2C;AAE/C,SAAS,KAAK,CAAC,OAAoB,EAAA;EACjC,iBAAiB,GAAG,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,IAAI,CAAC,YAAY,CACrE,QAAQ,EACR,QAAQ,EACR,QAAQ,EACR,QAAQ,EACR,QAAQ,EACR,QAAQ,CACT,CAAC;AACJ;AAEA,OAAM,SAAU,aAAa,CACzB,IAAyD,EAAA;EAC3D,MAAM;IAAC,MAAM;IAAE;EAAO,CAAC,GAAG,IAAI;EAC9B,MAAM;IAAC;EAAK,CAAC,GAAG,MAAM;EAEtB,MAAM,GAAG,GAAG,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC;EACxD,MAAM,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE;EACtD,MAAM,KAAK,GAAG,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE;EAElD,MAAM,CAAC,KAAK,EAAE,WAAW,EAAE,UAAU,EAAE,WAAW,CAAC,GAAG,KAAK,CAAC,KAAK;EAEjE,iBAAiB,CACb,OAAO,EAAE,KAAK,EAAE,WAAW,EAAE,UAAU,EAAE,WAAW,EAAE,KAAK,CAAC;EAChE,OAAO,GAAG;AACZ;AAEA,OAAO,MAAM,mBAAmB,GAAiB;EAC/C,UAAU,EAAE,aAAa;EACzB,WAAW,EAAE,MAAM;EACnB,UAAU,EAAE,aAAiC;EAC7C,SAAS,EAAE;CACZ","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { FlipLeftRight } from '@tensorflow/tfjs-core';\nlet wasmFlipLeftRight;\nfunction setup(backend) {\n    wasmFlipLeftRight = backend.wasm.cwrap(FlipLeftRight, null /* void */, [\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n        'number',\n    ]);\n}\nexport function flipLeftRight(args) {\n    const { inputs, backend } = args;\n    const { image } = inputs;\n    const out = backend.makeOutput(image.shape, image.dtype);\n    const imageId = backend.dataIdMap.get(image.dataId).id;\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    const [batch, imageHeight, imageWidth, numChannels] = image.shape;\n    wasmFlipLeftRight(imageId, batch, imageHeight, imageWidth, numChannels, outId);\n    return out;\n}\nexport const flipLeftRightConfig = {\n    kernelName: FlipLeftRight,\n    backendName: 'wasm',\n    kernelFunc: flipLeftRight,\n    setupFunc: setup\n};\n//# sourceMappingURL=FlipLeftRight.js.map"]},"metadata":{},"sourceType":"module"}