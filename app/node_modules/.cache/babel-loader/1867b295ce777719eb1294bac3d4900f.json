{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { leakyRelu } from '../../ops/leaky_relu';\nimport { Tensor } from '../../tensor';\nTensor.prototype.leakyRelu = function (alpha) {\n  this.throwIfDisposed();\n  return leakyRelu(this, alpha);\n};","map":{"version":3,"sources":["../../../src/public/chained_ops/leaky_relu.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;AAeG;AACH,SAAQ,SAAS,QAAO,sBAAsB;AAC9C,SAAQ,MAAM,QAAO,cAAc;AASnC,MAAM,CAAC,SAAS,CAAC,SAAS,GAAG,UAChB,KAAa,EAAA;EACxB,IAAI,CAAC,eAAe,EAAE;EACtB,OAAO,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC;AAC/B,CAAC","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { leakyRelu } from '../../ops/leaky_relu';\nimport { Tensor } from '../../tensor';\nTensor.prototype.leakyRelu = function (alpha) {\n    this.throwIfDisposed();\n    return leakyRelu(this, alpha);\n};\n//# sourceMappingURL=leaky_relu.js.map"]},"metadata":{},"sourceType":"module"}