{"ast":null,"code":"import { concat } from './concat';\nimport { op } from './operation';\n/**\n * Concatenates a list of`tf.Tensor1D`s along an axis. See `concat` for details.\n *\n * For example, if:\n * A: shape(3) = |r1, g1, b1|\n * B: shape(2) = |r2, g2|\n * C = tf.concat1d([A, B]) == |r1, g1, b1, r2, g2|\n *\n * @param tensors A list of`tf.Tensor`s to concatenate.\n * @return The concatenated array.\n */\nfunction concat1d_(tensors) {\n  return concat(tensors, 0 /* axis */);\n}\n\nexport const concat1d = op({\n  concat1d_\n});","map":{"version":3,"sources":["../../src/ops/concat_1d.ts"],"names":[],"mappings":"AAmBA,SAAQ,MAAM,QAAO,UAAU;AAC/B,SAAQ,EAAE,QAAO,aAAa;AAE9B;;;;;;;;;;AAUG;AACH,SAAS,SAAS,CAAC,OAAmC,EAAA;EACpD,OAAO,MAAM,CAAC,OAAO,EAAE,CAAC,CAAC,WAAW;AACtC;;AAEA,OAAO,MAAM,QAAQ,GAAG,EAAE,CAAC;EAAC;AAAS,CAAC,CAAC","sourceRoot":"","sourcesContent":["import { concat } from './concat';\nimport { op } from './operation';\n/**\n * Concatenates a list of`tf.Tensor1D`s along an axis. See `concat` for details.\n *\n * For example, if:\n * A: shape(3) = |r1, g1, b1|\n * B: shape(2) = |r2, g2|\n * C = tf.concat1d([A, B]) == |r1, g1, b1, r2, g2|\n *\n * @param tensors A list of`tf.Tensor`s to concatenate.\n * @return The concatenated array.\n */\nfunction concat1d_(tensors) {\n    return concat(tensors, 0 /* axis */);\n}\nexport const concat1d = op({ concat1d_ });\n//# sourceMappingURL=concat_1d.js.map"]},"metadata":{},"sourceType":"module"}